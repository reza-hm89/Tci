#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TerendCmsDB")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertAgentTable(AgentTable instance);
  partial void UpdateAgentTable(AgentTable instance);
  partial void DeleteAgentTable(AgentTable instance);
  partial void InsertAuctionDownloadTable(AuctionDownloadTable instance);
  partial void UpdateAuctionDownloadTable(AuctionDownloadTable instance);
  partial void DeleteAuctionDownloadTable(AuctionDownloadTable instance);
  partial void InsertAuctionFilesTable(AuctionFilesTable instance);
  partial void UpdateAuctionFilesTable(AuctionFilesTable instance);
  partial void DeleteAuctionFilesTable(AuctionFilesTable instance);
  partial void InsertAuctionGroupTable(AuctionGroupTable instance);
  partial void UpdateAuctionGroupTable(AuctionGroupTable instance);
  partial void DeleteAuctionGroupTable(AuctionGroupTable instance);
  partial void InsertAuctionTable(AuctionTable instance);
  partial void UpdateAuctionTable(AuctionTable instance);
  partial void DeleteAuctionTable(AuctionTable instance);
  partial void InsertErrorTable(ErrorTable instance);
  partial void UpdateErrorTable(ErrorTable instance);
  partial void DeleteErrorTable(ErrorTable instance);
  partial void InsertLanguageTable(LanguageTable instance);
  partial void UpdateLanguageTable(LanguageTable instance);
  partial void DeleteLanguageTable(LanguageTable instance);
  partial void InsertLinkTable(LinkTable instance);
  partial void UpdateLinkTable(LinkTable instance);
  partial void DeleteLinkTable(LinkTable instance);
  partial void InsertMenuGroupTable(MenuGroupTable instance);
  partial void UpdateMenuGroupTable(MenuGroupTable instance);
  partial void DeleteMenuGroupTable(MenuGroupTable instance);
  partial void InsertMenuTable(MenuTable instance);
  partial void UpdateMenuTable(MenuTable instance);
  partial void DeleteMenuTable(MenuTable instance);
  partial void InsertMessageTable(MessageTable instance);
  partial void UpdateMessageTable(MessageTable instance);
  partial void DeleteMessageTable(MessageTable instance);
  partial void InsertModuleTable(ModuleTable instance);
  partial void UpdateModuleTable(ModuleTable instance);
  partial void DeleteModuleTable(ModuleTable instance);
  partial void InsertNewsCommentTable(NewsCommentTable instance);
  partial void UpdateNewsCommentTable(NewsCommentTable instance);
  partial void DeleteNewsCommentTable(NewsCommentTable instance);
  partial void InsertNewsGroupTable(NewsGroupTable instance);
  partial void UpdateNewsGroupTable(NewsGroupTable instance);
  partial void DeleteNewsGroupTable(NewsGroupTable instance);
  partial void InsertNewsTable(NewsTable instance);
  partial void UpdateNewsTable(NewsTable instance);
  partial void DeleteNewsTable(NewsTable instance);
  partial void InsertOurServiceTable(OurServiceTable instance);
  partial void UpdateOurServiceTable(OurServiceTable instance);
  partial void DeleteOurServiceTable(OurServiceTable instance);
  partial void InsertPackageGroupTable(PackageGroupTable instance);
  partial void UpdatePackageGroupTable(PackageGroupTable instance);
  partial void DeletePackageGroupTable(PackageGroupTable instance);
  partial void InsertPackageTable(PackageTable instance);
  partial void UpdatePackageTable(PackageTable instance);
  partial void DeletePackageTable(PackageTable instance);
  partial void InsertPageTable(PageTable instance);
  partial void UpdatePageTable(PageTable instance);
  partial void DeletePageTable(PageTable instance);
  partial void InsertPermissionTable(PermissionTable instance);
  partial void UpdatePermissionTable(PermissionTable instance);
  partial void DeletePermissionTable(PermissionTable instance);
  partial void InsertPollAnswerTable(PollAnswerTable instance);
  partial void UpdatePollAnswerTable(PollAnswerTable instance);
  partial void DeletePollAnswerTable(PollAnswerTable instance);
  partial void InsertPollTable(PollTable instance);
  partial void UpdatePollTable(PollTable instance);
  partial void DeletePollTable(PollTable instance);
  partial void InsertSlideTable(SlideTable instance);
  partial void UpdateSlideTable(SlideTable instance);
  partial void DeleteSlideTable(SlideTable instance);
  partial void InsertTelegramLotteryUser(TelegramLotteryUser instance);
  partial void UpdateTelegramLotteryUser(TelegramLotteryUser instance);
  partial void DeleteTelegramLotteryUser(TelegramLotteryUser instance);
  partial void InsertTelegramUser(TelegramUser instance);
  partial void UpdateTelegramUser(TelegramUser instance);
  partial void DeleteTelegramUser(TelegramUser instance);
  partial void InsertUserGroupAccessTable(UserGroupAccessTable instance);
  partial void UpdateUserGroupAccessTable(UserGroupAccessTable instance);
  partial void DeleteUserGroupAccessTable(UserGroupAccessTable instance);
  partial void InsertUserGroupTable(UserGroupTable instance);
  partial void UpdateUserGroupTable(UserGroupTable instance);
  partial void DeleteUserGroupTable(UserGroupTable instance);
  partial void InsertUserTable(UserTable instance);
  partial void UpdateUserTable(UserTable instance);
  partial void DeleteUserTable(UserTable instance);
  partial void InsertTelegramLottery(TelegramLottery instance);
  partial void UpdateTelegramLottery(TelegramLottery instance);
  partial void DeleteTelegramLottery(TelegramLottery instance);
  partial void InsertIdeaTable(IdeaTable instance);
  partial void UpdateIdeaTable(IdeaTable instance);
  partial void DeleteIdeaTable(IdeaTable instance);
  partial void InsertModalTable(ModalTable instance);
  partial void UpdateModalTable(ModalTable instance);
  partial void DeleteModalTable(ModalTable instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TerendCmsDBConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<AgentTable> AgentTables
	{
		get
		{
			return this.GetTable<AgentTable>();
		}
	}
	
	public System.Data.Linq.Table<AuctionDownloadTable> AuctionDownloadTables
	{
		get
		{
			return this.GetTable<AuctionDownloadTable>();
		}
	}
	
	public System.Data.Linq.Table<AuctionFilesTable> AuctionFilesTables
	{
		get
		{
			return this.GetTable<AuctionFilesTable>();
		}
	}
	
	public System.Data.Linq.Table<AuctionGroupTable> AuctionGroupTables
	{
		get
		{
			return this.GetTable<AuctionGroupTable>();
		}
	}
	
	public System.Data.Linq.Table<AuctionTable> AuctionTables
	{
		get
		{
			return this.GetTable<AuctionTable>();
		}
	}
	
	public System.Data.Linq.Table<ErrorTable> ErrorTables
	{
		get
		{
			return this.GetTable<ErrorTable>();
		}
	}
	
	public System.Data.Linq.Table<LanguageTable> LanguageTables
	{
		get
		{
			return this.GetTable<LanguageTable>();
		}
	}
	
	public System.Data.Linq.Table<LinkTable> LinkTables
	{
		get
		{
			return this.GetTable<LinkTable>();
		}
	}
	
	public System.Data.Linq.Table<MenuGroupTable> MenuGroupTables
	{
		get
		{
			return this.GetTable<MenuGroupTable>();
		}
	}
	
	public System.Data.Linq.Table<MenuTable> MenuTables
	{
		get
		{
			return this.GetTable<MenuTable>();
		}
	}
	
	public System.Data.Linq.Table<MessageTable> MessageTables
	{
		get
		{
			return this.GetTable<MessageTable>();
		}
	}
	
	public System.Data.Linq.Table<ModuleTable> ModuleTables
	{
		get
		{
			return this.GetTable<ModuleTable>();
		}
	}
	
	public System.Data.Linq.Table<NewsCommentTable> NewsCommentTables
	{
		get
		{
			return this.GetTable<NewsCommentTable>();
		}
	}
	
	public System.Data.Linq.Table<NewsGroupTable> NewsGroupTables
	{
		get
		{
			return this.GetTable<NewsGroupTable>();
		}
	}
	
	public System.Data.Linq.Table<NewsTable> NewsTables
	{
		get
		{
			return this.GetTable<NewsTable>();
		}
	}
	
	public System.Data.Linq.Table<OurServiceTable> OurServiceTables
	{
		get
		{
			return this.GetTable<OurServiceTable>();
		}
	}
	
	public System.Data.Linq.Table<PackageGroupTable> PackageGroupTables
	{
		get
		{
			return this.GetTable<PackageGroupTable>();
		}
	}
	
	public System.Data.Linq.Table<PackageTable> PackageTables
	{
		get
		{
			return this.GetTable<PackageTable>();
		}
	}
	
	public System.Data.Linq.Table<PageTable> PageTables
	{
		get
		{
			return this.GetTable<PageTable>();
		}
	}
	
	public System.Data.Linq.Table<PermissionTable> PermissionTables
	{
		get
		{
			return this.GetTable<PermissionTable>();
		}
	}
	
	public System.Data.Linq.Table<PollAnswerTable> PollAnswerTables
	{
		get
		{
			return this.GetTable<PollAnswerTable>();
		}
	}
	
	public System.Data.Linq.Table<PollTable> PollTables
	{
		get
		{
			return this.GetTable<PollTable>();
		}
	}
	
	public System.Data.Linq.Table<SlideTable> SlideTables
	{
		get
		{
			return this.GetTable<SlideTable>();
		}
	}
	
	public System.Data.Linq.Table<TelegramLotteryUser> TelegramLotteryUsers
	{
		get
		{
			return this.GetTable<TelegramLotteryUser>();
		}
	}
	
	public System.Data.Linq.Table<TelegramUser> TelegramUsers
	{
		get
		{
			return this.GetTable<TelegramUser>();
		}
	}
	
	public System.Data.Linq.Table<UserGroupAccessTable> UserGroupAccessTables
	{
		get
		{
			return this.GetTable<UserGroupAccessTable>();
		}
	}
	
	public System.Data.Linq.Table<UserGroupTable> UserGroupTables
	{
		get
		{
			return this.GetTable<UserGroupTable>();
		}
	}
	
	public System.Data.Linq.Table<UserTable> UserTables
	{
		get
		{
			return this.GetTable<UserTable>();
		}
	}
	
	public System.Data.Linq.Table<TelegramLottery> TelegramLotteries
	{
		get
		{
			return this.GetTable<TelegramLottery>();
		}
	}
	
	public System.Data.Linq.Table<IdeaTable> IdeaTables
	{
		get
		{
			return this.GetTable<IdeaTable>();
		}
	}
	
	public System.Data.Linq.Table<ModalTable> ModalTables
	{
		get
		{
			return this.GetTable<ModalTable>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AgentTable")]
public partial class AgentTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private string _Company;
	
	private string _Code;
	
	private string _Activity;
	
	private string _Address;
	
	private string _Tel;
	
	private string _Mobile;
	
	private string _Image;
	
	private System.Nullable<bool> _Visibility;
	
	private System.Nullable<long> _LanguageID;
	
	private System.Nullable<long> _Priority;
	
	private System.Nullable<long> _UserID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnActivityChanging(string value);
    partial void OnActivityChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnVisibilityChanging(System.Nullable<bool> value);
    partial void OnVisibilityChanged();
    partial void OnLanguageIDChanging(System.Nullable<long> value);
    partial void OnLanguageIDChanged();
    partial void OnPriorityChanging(System.Nullable<long> value);
    partial void OnPriorityChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    #endregion
	
	public AgentTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(MAX)")]
	public string Company
	{
		get
		{
			return this._Company;
		}
		set
		{
			if ((this._Company != value))
			{
				this.OnCompanyChanging(value);
				this.SendPropertyChanging();
				this._Company = value;
				this.SendPropertyChanged("Company");
				this.OnCompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(MAX)")]
	public string Code
	{
		get
		{
			return this._Code;
		}
		set
		{
			if ((this._Code != value))
			{
				this.OnCodeChanging(value);
				this.SendPropertyChanging();
				this._Code = value;
				this.SendPropertyChanged("Code");
				this.OnCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="NVarChar(MAX)")]
	public string Activity
	{
		get
		{
			return this._Activity;
		}
		set
		{
			if ((this._Activity != value))
			{
				this.OnActivityChanging(value);
				this.SendPropertyChanging();
				this._Activity = value;
				this.SendPropertyChanged("Activity");
				this.OnActivityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(MAX)")]
	public string Tel
	{
		get
		{
			return this._Tel;
		}
		set
		{
			if ((this._Tel != value))
			{
				this.OnTelChanging(value);
				this.SendPropertyChanging();
				this._Tel = value;
				this.SendPropertyChanged("Tel");
				this.OnTelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(MAX)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit")]
	public System.Nullable<bool> Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="BigInt")]
	public System.Nullable<long> LanguageID
	{
		get
		{
			return this._LanguageID;
		}
		set
		{
			if ((this._LanguageID != value))
			{
				this.OnLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._LanguageID = value;
				this.SendPropertyChanged("LanguageID");
				this.OnLanguageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="BigInt")]
	public System.Nullable<long> Priority
	{
		get
		{
			return this._Priority;
		}
		set
		{
			if ((this._Priority != value))
			{
				this.OnPriorityChanging(value);
				this.SendPropertyChanging();
				this._Priority = value;
				this.SendPropertyChanged("Priority");
				this.OnPriorityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuctionDownloadTable")]
public partial class AuctionDownloadTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private System.Nullable<long> _AuctionID;
	
	private string _Name;
	
	private string _Family;
	
	private string _Tel;
	
	private string _Description;
	
	private EntityRef<AuctionTable> _AuctionTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAuctionIDChanging(System.Nullable<long> value);
    partial void OnAuctionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public AuctionDownloadTable()
	{
		this._AuctionTable = default(EntityRef<AuctionTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuctionID", DbType="BigInt")]
	public System.Nullable<long> AuctionID
	{
		get
		{
			return this._AuctionID;
		}
		set
		{
			if ((this._AuctionID != value))
			{
				if (this._AuctionTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAuctionIDChanging(value);
				this.SendPropertyChanging();
				this._AuctionID = value;
				this.SendPropertyChanged("AuctionID");
				this.OnAuctionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family", DbType="NVarChar(MAX)")]
	public string Family
	{
		get
		{
			return this._Family;
		}
		set
		{
			if ((this._Family != value))
			{
				this.OnFamilyChanging(value);
				this.SendPropertyChanging();
				this._Family = value;
				this.SendPropertyChanged("Family");
				this.OnFamilyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(MAX)")]
	public string Tel
	{
		get
		{
			return this._Tel;
		}
		set
		{
			if ((this._Tel != value))
			{
				this.OnTelChanging(value);
				this.SendPropertyChanging();
				this._Tel = value;
				this.SendPropertyChanged("Tel");
				this.OnTelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuctionTable_AuctionDownloadTable", Storage="_AuctionTable", ThisKey="AuctionID", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
	public AuctionTable AuctionTable
	{
		get
		{
			return this._AuctionTable.Entity;
		}
		set
		{
			AuctionTable previousValue = this._AuctionTable.Entity;
			if (((previousValue != value) 
						|| (this._AuctionTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AuctionTable.Entity = null;
					previousValue.AuctionDownloadTables.Remove(this);
				}
				this._AuctionTable.Entity = value;
				if ((value != null))
				{
					value.AuctionDownloadTables.Add(this);
					this._AuctionID = value.Id;
				}
				else
				{
					this._AuctionID = default(Nullable<long>);
				}
				this.SendPropertyChanged("AuctionTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuctionFilesTable")]
public partial class AuctionFilesTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private System.Nullable<long> _AuctionID;
	
	private string _Name;
	
	private EntityRef<AuctionTable> _AuctionTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAuctionIDChanging(System.Nullable<long> value);
    partial void OnAuctionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public AuctionFilesTable()
	{
		this._AuctionTable = default(EntityRef<AuctionTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuctionID", DbType="BigInt")]
	public System.Nullable<long> AuctionID
	{
		get
		{
			return this._AuctionID;
		}
		set
		{
			if ((this._AuctionID != value))
			{
				if (this._AuctionTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAuctionIDChanging(value);
				this.SendPropertyChanging();
				this._AuctionID = value;
				this.SendPropertyChanged("AuctionID");
				this.OnAuctionIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuctionTable_AuctionFilesTable", Storage="_AuctionTable", ThisKey="AuctionID", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
	public AuctionTable AuctionTable
	{
		get
		{
			return this._AuctionTable.Entity;
		}
		set
		{
			AuctionTable previousValue = this._AuctionTable.Entity;
			if (((previousValue != value) 
						|| (this._AuctionTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._AuctionTable.Entity = null;
					previousValue.AuctionFilesTables.Remove(this);
				}
				this._AuctionTable.Entity = value;
				if ((value != null))
				{
					value.AuctionFilesTables.Add(this);
					this._AuctionID = value.Id;
				}
				else
				{
					this._AuctionID = default(Nullable<long>);
				}
				this.SendPropertyChanged("AuctionTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuctionGroupTable")]
public partial class AuctionGroupTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private string _Description;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public AuctionGroupTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuctionTable")]
public partial class AuctionTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private System.Nullable<long> _AuctionGroupID;
	
	private System.Nullable<byte> _Kind;
	
	private string _Subject;
	
	private string _Number;
	
	private System.Nullable<System.DateTime> _RegDate;
	
	private System.Nullable<System.DateTime> _StartRecieveDate;
	
	private System.Nullable<System.DateTime> _EndRecieveDate;
	
	private System.Nullable<System.DateTime> _SendDate;
	
	private System.Nullable<System.DateTime> _ReOpeningDate;
	
	private string _Description;
	
	private EntitySet<AuctionDownloadTable> _AuctionDownloadTables;
	
	private EntitySet<AuctionFilesTable> _AuctionFilesTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAuctionGroupIDChanging(System.Nullable<long> value);
    partial void OnAuctionGroupIDChanged();
    partial void OnKindChanging(System.Nullable<byte> value);
    partial void OnKindChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    partial void OnStartRecieveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartRecieveDateChanged();
    partial void OnEndRecieveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndRecieveDateChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnReOpeningDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReOpeningDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public AuctionTable()
	{
		this._AuctionDownloadTables = new EntitySet<AuctionDownloadTable>(new Action<AuctionDownloadTable>(this.attach_AuctionDownloadTables), new Action<AuctionDownloadTable>(this.detach_AuctionDownloadTables));
		this._AuctionFilesTables = new EntitySet<AuctionFilesTable>(new Action<AuctionFilesTable>(this.attach_AuctionFilesTables), new Action<AuctionFilesTable>(this.detach_AuctionFilesTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuctionGroupID", DbType="BigInt")]
	public System.Nullable<long> AuctionGroupID
	{
		get
		{
			return this._AuctionGroupID;
		}
		set
		{
			if ((this._AuctionGroupID != value))
			{
				this.OnAuctionGroupIDChanging(value);
				this.SendPropertyChanging();
				this._AuctionGroupID = value;
				this.SendPropertyChanged("AuctionGroupID");
				this.OnAuctionGroupIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="TinyInt")]
	public System.Nullable<byte> Kind
	{
		get
		{
			return this._Kind;
		}
		set
		{
			if ((this._Kind != value))
			{
				this.OnKindChanging(value);
				this.SendPropertyChanging();
				this._Kind = value;
				this.SendPropertyChanged("Kind");
				this.OnKindChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(MAX)")]
	public string Subject
	{
		get
		{
			return this._Subject;
		}
		set
		{
			if ((this._Subject != value))
			{
				this.OnSubjectChanging(value);
				this.SendPropertyChanging();
				this._Subject = value;
				this.SendPropertyChanged("Subject");
				this.OnSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
	public string Number
	{
		get
		{
			return this._Number;
		}
		set
		{
			if ((this._Number != value))
			{
				this.OnNumberChanging(value);
				this.SendPropertyChanging();
				this._Number = value;
				this.SendPropertyChanged("Number");
				this.OnNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="Date")]
	public System.Nullable<System.DateTime> RegDate
	{
		get
		{
			return this._RegDate;
		}
		set
		{
			if ((this._RegDate != value))
			{
				this.OnRegDateChanging(value);
				this.SendPropertyChanging();
				this._RegDate = value;
				this.SendPropertyChanged("RegDate");
				this.OnRegDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartRecieveDate", DbType="Date")]
	public System.Nullable<System.DateTime> StartRecieveDate
	{
		get
		{
			return this._StartRecieveDate;
		}
		set
		{
			if ((this._StartRecieveDate != value))
			{
				this.OnStartRecieveDateChanging(value);
				this.SendPropertyChanging();
				this._StartRecieveDate = value;
				this.SendPropertyChanged("StartRecieveDate");
				this.OnStartRecieveDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndRecieveDate", DbType="Date")]
	public System.Nullable<System.DateTime> EndRecieveDate
	{
		get
		{
			return this._EndRecieveDate;
		}
		set
		{
			if ((this._EndRecieveDate != value))
			{
				this.OnEndRecieveDateChanging(value);
				this.SendPropertyChanging();
				this._EndRecieveDate = value;
				this.SendPropertyChanged("EndRecieveDate");
				this.OnEndRecieveDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="Date")]
	public System.Nullable<System.DateTime> SendDate
	{
		get
		{
			return this._SendDate;
		}
		set
		{
			if ((this._SendDate != value))
			{
				this.OnSendDateChanging(value);
				this.SendPropertyChanging();
				this._SendDate = value;
				this.SendPropertyChanged("SendDate");
				this.OnSendDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReOpeningDate", DbType="Date")]
	public System.Nullable<System.DateTime> ReOpeningDate
	{
		get
		{
			return this._ReOpeningDate;
		}
		set
		{
			if ((this._ReOpeningDate != value))
			{
				this.OnReOpeningDateChanging(value);
				this.SendPropertyChanging();
				this._ReOpeningDate = value;
				this.SendPropertyChanged("ReOpeningDate");
				this.OnReOpeningDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuctionTable_AuctionDownloadTable", Storage="_AuctionDownloadTables", ThisKey="Id", OtherKey="AuctionID")]
	public EntitySet<AuctionDownloadTable> AuctionDownloadTables
	{
		get
		{
			return this._AuctionDownloadTables;
		}
		set
		{
			this._AuctionDownloadTables.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AuctionTable_AuctionFilesTable", Storage="_AuctionFilesTables", ThisKey="Id", OtherKey="AuctionID")]
	public EntitySet<AuctionFilesTable> AuctionFilesTables
	{
		get
		{
			return this._AuctionFilesTables;
		}
		set
		{
			this._AuctionFilesTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_AuctionDownloadTables(AuctionDownloadTable entity)
	{
		this.SendPropertyChanging();
		entity.AuctionTable = this;
	}
	
	private void detach_AuctionDownloadTables(AuctionDownloadTable entity)
	{
		this.SendPropertyChanging();
		entity.AuctionTable = null;
	}
	
	private void attach_AuctionFilesTables(AuctionFilesTable entity)
	{
		this.SendPropertyChanging();
		entity.AuctionTable = this;
	}
	
	private void detach_AuctionFilesTables(AuctionFilesTable entity)
	{
		this.SendPropertyChanging();
		entity.AuctionTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ErrorTable")]
public partial class ErrorTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Title;
	
	private string _Detail;
	
	private string _Date;
	
	private string _Username;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    #endregion
	
	public ErrorTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Detail
	{
		get
		{
			return this._Detail;
		}
		set
		{
			if ((this._Detail != value))
			{
				this.OnDetailChanging(value);
				this.SendPropertyChanging();
				this._Detail = value;
				this.SendPropertyChanged("Detail");
				this.OnDetailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(MAX)")]
	public string Date
	{
		get
		{
			return this._Date;
		}
		set
		{
			if ((this._Date != value))
			{
				this.OnDateChanging(value);
				this.SendPropertyChanging();
				this._Date = value;
				this.SendPropertyChanged("Date");
				this.OnDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(MAX)")]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LanguageTable")]
public partial class LanguageTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private string _Icon;
	
	private string _Link;
	
	private string _OpenLink;
	
	private System.Nullable<bool> _Visibility;
	
	private string _Code;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnOpenLinkChanging(string value);
    partial void OnOpenLinkChanged();
    partial void OnVisibilityChanging(System.Nullable<bool> value);
    partial void OnVisibilityChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
	
	public LanguageTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(MAX)")]
	public string Icon
	{
		get
		{
			return this._Icon;
		}
		set
		{
			if ((this._Icon != value))
			{
				this.OnIconChanging(value);
				this.SendPropertyChanging();
				this._Icon = value;
				this.SendPropertyChanged("Icon");
				this.OnIconChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX)")]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenLink", DbType="NVarChar(50)")]
	public string OpenLink
	{
		get
		{
			return this._OpenLink;
		}
		set
		{
			if ((this._OpenLink != value))
			{
				this.OnOpenLinkChanging(value);
				this.SendPropertyChanging();
				this._OpenLink = value;
				this.SendPropertyChanged("OpenLink");
				this.OnOpenLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit")]
	public System.Nullable<bool> Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(MAX)")]
	public string Code
	{
		get
		{
			return this._Code;
		}
		set
		{
			if ((this._Code != value))
			{
				this.OnCodeChanging(value);
				this.SendPropertyChanging();
				this._Code = value;
				this.SendPropertyChanged("Code");
				this.OnCodeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkTable")]
public partial class LinkTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Title;
	
	private string _Link;
	
	private string _OpenLink;
	
	private string _Icon;
	
	private bool _Visibility;
	
	private System.Nullable<long> _LanguageID;
	
	private System.Nullable<long> _Priority;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnOpenLinkChanging(string value);
    partial void OnOpenLinkChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnVisibilityChanging(bool value);
    partial void OnVisibilityChanged();
    partial void OnLanguageIDChanging(System.Nullable<long> value);
    partial void OnLanguageIDChanged();
    partial void OnPriorityChanging(System.Nullable<long> value);
    partial void OnPriorityChanged();
    #endregion
	
	public LinkTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX)")]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenLink", DbType="NVarChar(MAX)")]
	public string OpenLink
	{
		get
		{
			return this._OpenLink;
		}
		set
		{
			if ((this._OpenLink != value))
			{
				this.OnOpenLinkChanging(value);
				this.SendPropertyChanging();
				this._OpenLink = value;
				this.SendPropertyChanged("OpenLink");
				this.OnOpenLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(MAX)")]
	public string Icon
	{
		get
		{
			return this._Icon;
		}
		set
		{
			if ((this._Icon != value))
			{
				this.OnIconChanging(value);
				this.SendPropertyChanging();
				this._Icon = value;
				this.SendPropertyChanged("Icon");
				this.OnIconChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit NOT NULL")]
	public bool Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="BigInt")]
	public System.Nullable<long> LanguageID
	{
		get
		{
			return this._LanguageID;
		}
		set
		{
			if ((this._LanguageID != value))
			{
				this.OnLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._LanguageID = value;
				this.SendPropertyChanged("LanguageID");
				this.OnLanguageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="BigInt")]
	public System.Nullable<long> Priority
	{
		get
		{
			return this._Priority;
		}
		set
		{
			if ((this._Priority != value))
			{
				this.OnPriorityChanging(value);
				this.SendPropertyChanging();
				this._Priority = value;
				this.SendPropertyChanged("Priority");
				this.OnPriorityChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuGroupTable")]
public partial class MenuGroupTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private System.Nullable<bool> _Visibility;
	
	private System.Nullable<long> _LanguageID;
	
	private EntitySet<MenuTable> _MenuTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnVisibilityChanging(System.Nullable<bool> value);
    partial void OnVisibilityChanged();
    partial void OnLanguageIDChanging(System.Nullable<long> value);
    partial void OnLanguageIDChanged();
    #endregion
	
	public MenuGroupTable()
	{
		this._MenuTables = new EntitySet<MenuTable>(new Action<MenuTable>(this.attach_MenuTables), new Action<MenuTable>(this.detach_MenuTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit")]
	public System.Nullable<bool> Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="BigInt")]
	public System.Nullable<long> LanguageID
	{
		get
		{
			return this._LanguageID;
		}
		set
		{
			if ((this._LanguageID != value))
			{
				this.OnLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._LanguageID = value;
				this.SendPropertyChanged("LanguageID");
				this.OnLanguageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenuGroupTable_MenuTable", Storage="_MenuTables", ThisKey="Id", OtherKey="MenuGroupID")]
	public EntitySet<MenuTable> MenuTables
	{
		get
		{
			return this._MenuTables;
		}
		set
		{
			this._MenuTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_MenuTables(MenuTable entity)
	{
		this.SendPropertyChanging();
		entity.MenuGroupTable = this;
	}
	
	private void detach_MenuTables(MenuTable entity)
	{
		this.SendPropertyChanging();
		entity.MenuGroupTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuTable")]
public partial class MenuTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private System.Nullable<long> _Parent;
	
	private string _Link;
	
	private string _OpenLink;
	
	private System.Nullable<long> _Priority;
	
	private bool _Visibility;
	
	private System.Nullable<long> _LanguageID;
	
	private System.Nullable<long> _MenuGroupID;
	
	private EntityRef<MenuGroupTable> _MenuGroupTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentChanging(System.Nullable<long> value);
    partial void OnParentChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnOpenLinkChanging(string value);
    partial void OnOpenLinkChanged();
    partial void OnPriorityChanging(System.Nullable<long> value);
    partial void OnPriorityChanged();
    partial void OnVisibilityChanging(bool value);
    partial void OnVisibilityChanged();
    partial void OnLanguageIDChanging(System.Nullable<long> value);
    partial void OnLanguageIDChanged();
    partial void OnMenuGroupIDChanging(System.Nullable<long> value);
    partial void OnMenuGroupIDChanged();
    #endregion
	
	public MenuTable()
	{
		this._MenuGroupTable = default(EntityRef<MenuGroupTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="BigInt")]
	public System.Nullable<long> Parent
	{
		get
		{
			return this._Parent;
		}
		set
		{
			if ((this._Parent != value))
			{
				this.OnParentChanging(value);
				this.SendPropertyChanging();
				this._Parent = value;
				this.SendPropertyChanged("Parent");
				this.OnParentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX)")]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenLink", DbType="NVarChar(MAX)")]
	public string OpenLink
	{
		get
		{
			return this._OpenLink;
		}
		set
		{
			if ((this._OpenLink != value))
			{
				this.OnOpenLinkChanging(value);
				this.SendPropertyChanging();
				this._OpenLink = value;
				this.SendPropertyChanged("OpenLink");
				this.OnOpenLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="BigInt")]
	public System.Nullable<long> Priority
	{
		get
		{
			return this._Priority;
		}
		set
		{
			if ((this._Priority != value))
			{
				this.OnPriorityChanging(value);
				this.SendPropertyChanging();
				this._Priority = value;
				this.SendPropertyChanged("Priority");
				this.OnPriorityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit NOT NULL")]
	public bool Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="BigInt")]
	public System.Nullable<long> LanguageID
	{
		get
		{
			return this._LanguageID;
		}
		set
		{
			if ((this._LanguageID != value))
			{
				this.OnLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._LanguageID = value;
				this.SendPropertyChanged("LanguageID");
				this.OnLanguageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuGroupID", DbType="BigInt")]
	public System.Nullable<long> MenuGroupID
	{
		get
		{
			return this._MenuGroupID;
		}
		set
		{
			if ((this._MenuGroupID != value))
			{
				if (this._MenuGroupTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMenuGroupIDChanging(value);
				this.SendPropertyChanging();
				this._MenuGroupID = value;
				this.SendPropertyChanged("MenuGroupID");
				this.OnMenuGroupIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenuGroupTable_MenuTable", Storage="_MenuGroupTable", ThisKey="MenuGroupID", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
	public MenuGroupTable MenuGroupTable
	{
		get
		{
			return this._MenuGroupTable.Entity;
		}
		set
		{
			MenuGroupTable previousValue = this._MenuGroupTable.Entity;
			if (((previousValue != value) 
						|| (this._MenuGroupTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._MenuGroupTable.Entity = null;
					previousValue.MenuTables.Remove(this);
				}
				this._MenuGroupTable.Entity = value;
				if ((value != null))
				{
					value.MenuTables.Add(this);
					this._MenuGroupID = value.Id;
				}
				else
				{
					this._MenuGroupID = default(Nullable<long>);
				}
				this.SendPropertyChanged("MenuGroupTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MessageTable")]
public partial class MessageTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private string _Mobile;
	
	private string _Email;
	
	private string _Title;
	
	private string _Body;
	
	private System.Nullable<System.DateTime> _SendDate;
	
	private string _UserIp;
	
	private System.Nullable<long> _UserID;
	
	private System.Nullable<long> _UserGroupID;
	
	private System.Nullable<int> _UnitID;
	
	private string _Family;
	
	private string _Body2;
	
	private string _Tel;
	
	private string _FileUrl;
	
	private string _Category;
	
	private string _Reply;
	
	private string _TrackingCode;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    partial void OnUserIpChanging(string value);
    partial void OnUserIpChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnUserGroupIDChanging(System.Nullable<long> value);
    partial void OnUserGroupIDChanged();
    partial void OnUnitIDChanging(System.Nullable<int> value);
    partial void OnUnitIDChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    partial void OnBody2Changing(string value);
    partial void OnBody2Changed();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnFileUrlChanging(string value);
    partial void OnFileUrlChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnReplyChanging(string value);
    partial void OnReplyChanged();
    partial void OnTrackingCodeChanging(string value);
    partial void OnTrackingCodeChanged();
    #endregion
	
	public MessageTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(MAX)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Body
	{
		get
		{
			return this._Body;
		}
		set
		{
			if ((this._Body != value))
			{
				this.OnBodyChanging(value);
				this.SendPropertyChanging();
				this._Body = value;
				this.SendPropertyChanged("Body");
				this.OnBodyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> SendDate
	{
		get
		{
			return this._SendDate;
		}
		set
		{
			if ((this._SendDate != value))
			{
				this.OnSendDateChanging(value);
				this.SendPropertyChanging();
				this._SendDate = value;
				this.SendPropertyChanged("SendDate");
				this.OnSendDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIp", DbType="NVarChar(50)")]
	public string UserIp
	{
		get
		{
			return this._UserIp;
		}
		set
		{
			if ((this._UserIp != value))
			{
				this.OnUserIpChanging(value);
				this.SendPropertyChanging();
				this._UserIp = value;
				this.SendPropertyChanged("UserIp");
				this.OnUserIpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupID", DbType="BigInt")]
	public System.Nullable<long> UserGroupID
	{
		get
		{
			return this._UserGroupID;
		}
		set
		{
			if ((this._UserGroupID != value))
			{
				this.OnUserGroupIDChanging(value);
				this.SendPropertyChanging();
				this._UserGroupID = value;
				this.SendPropertyChanged("UserGroupID");
				this.OnUserGroupIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int")]
	public System.Nullable<int> UnitID
	{
		get
		{
			return this._UnitID;
		}
		set
		{
			if ((this._UnitID != value))
			{
				this.OnUnitIDChanging(value);
				this.SendPropertyChanging();
				this._UnitID = value;
				this.SendPropertyChanged("UnitID");
				this.OnUnitIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family", DbType="NVarChar(MAX)")]
	public string Family
	{
		get
		{
			return this._Family;
		}
		set
		{
			if ((this._Family != value))
			{
				this.OnFamilyChanging(value);
				this.SendPropertyChanging();
				this._Family = value;
				this.SendPropertyChanged("Family");
				this.OnFamilyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body2", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Body2
	{
		get
		{
			return this._Body2;
		}
		set
		{
			if ((this._Body2 != value))
			{
				this.OnBody2Changing(value);
				this.SendPropertyChanging();
				this._Body2 = value;
				this.SendPropertyChanged("Body2");
				this.OnBody2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(MAX)")]
	public string Tel
	{
		get
		{
			return this._Tel;
		}
		set
		{
			if ((this._Tel != value))
			{
				this.OnTelChanging(value);
				this.SendPropertyChanging();
				this._Tel = value;
				this.SendPropertyChanged("Tel");
				this.OnTelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileUrl", DbType="NVarChar(MAX)")]
	public string FileUrl
	{
		get
		{
			return this._FileUrl;
		}
		set
		{
			if ((this._FileUrl != value))
			{
				this.OnFileUrlChanging(value);
				this.SendPropertyChanging();
				this._FileUrl = value;
				this.SendPropertyChanged("FileUrl");
				this.OnFileUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(MAX)")]
	public string Category
	{
		get
		{
			return this._Category;
		}
		set
		{
			if ((this._Category != value))
			{
				this.OnCategoryChanging(value);
				this.SendPropertyChanging();
				this._Category = value;
				this.SendPropertyChanged("Category");
				this.OnCategoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reply", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Reply
	{
		get
		{
			return this._Reply;
		}
		set
		{
			if ((this._Reply != value))
			{
				this.OnReplyChanging(value);
				this.SendPropertyChanging();
				this._Reply = value;
				this.SendPropertyChanged("Reply");
				this.OnReplyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingCode", DbType="NVarChar(50)")]
	public string TrackingCode
	{
		get
		{
			return this._TrackingCode;
		}
		set
		{
			if ((this._TrackingCode != value))
			{
				this.OnTrackingCodeChanging(value);
				this.SendPropertyChanging();
				this._TrackingCode = value;
				this.SendPropertyChanged("TrackingCode");
				this.OnTrackingCodeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModuleTable")]
public partial class ModuleTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _MenuContent;
	
	private string _MenuScript;
	
	private EntitySet<PermissionTable> _PermissionTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMenuContentChanging(string value);
    partial void OnMenuContentChanged();
    partial void OnMenuScriptChanging(string value);
    partial void OnMenuScriptChanged();
    #endregion
	
	public ModuleTable()
	{
		this._PermissionTables = new EntitySet<PermissionTable>(new Action<PermissionTable>(this.attach_PermissionTables), new Action<PermissionTable>(this.detach_PermissionTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MenuContent
	{
		get
		{
			return this._MenuContent;
		}
		set
		{
			if ((this._MenuContent != value))
			{
				this.OnMenuContentChanging(value);
				this.SendPropertyChanging();
				this._MenuContent = value;
				this.SendPropertyChanged("MenuContent");
				this.OnMenuContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuScript", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MenuScript
	{
		get
		{
			return this._MenuScript;
		}
		set
		{
			if ((this._MenuScript != value))
			{
				this.OnMenuScriptChanging(value);
				this.SendPropertyChanging();
				this._MenuScript = value;
				this.SendPropertyChanged("MenuScript");
				this.OnMenuScriptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModuleTable_PermissionTable", Storage="_PermissionTables", ThisKey="Id", OtherKey="ModuleID")]
	public EntitySet<PermissionTable> PermissionTables
	{
		get
		{
			return this._PermissionTables;
		}
		set
		{
			this._PermissionTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PermissionTables(PermissionTable entity)
	{
		this.SendPropertyChanging();
		entity.ModuleTable = this;
	}
	
	private void detach_PermissionTables(PermissionTable entity)
	{
		this.SendPropertyChanging();
		entity.ModuleTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsCommentTable")]
public partial class NewsCommentTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private string _Email;
	
	private string _Body;
	
	private System.Nullable<System.DateTime> _WrittenDate;
	
	private System.Nullable<bool> _Confirm;
	
	private System.Nullable<long> _UserID;
	
	private System.Nullable<int> _PositiveLike;
	
	private System.Nullable<int> _NegativeLike;
	
	private string _Ip;
	
	private System.Nullable<long> _NewsID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnWrittenDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWrittenDateChanged();
    partial void OnConfirmChanging(System.Nullable<bool> value);
    partial void OnConfirmChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnPositiveLikeChanging(System.Nullable<int> value);
    partial void OnPositiveLikeChanged();
    partial void OnNegativeLikeChanging(System.Nullable<int> value);
    partial void OnNegativeLikeChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnNewsIDChanging(System.Nullable<long> value);
    partial void OnNewsIDChanged();
    #endregion
	
	public NewsCommentTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Body
	{
		get
		{
			return this._Body;
		}
		set
		{
			if ((this._Body != value))
			{
				this.OnBodyChanging(value);
				this.SendPropertyChanging();
				this._Body = value;
				this.SendPropertyChanged("Body");
				this.OnBodyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WrittenDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> WrittenDate
	{
		get
		{
			return this._WrittenDate;
		}
		set
		{
			if ((this._WrittenDate != value))
			{
				this.OnWrittenDateChanging(value);
				this.SendPropertyChanging();
				this._WrittenDate = value;
				this.SendPropertyChanged("WrittenDate");
				this.OnWrittenDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Confirm]", Storage="_Confirm", DbType="Bit")]
	public System.Nullable<bool> Confirm
	{
		get
		{
			return this._Confirm;
		}
		set
		{
			if ((this._Confirm != value))
			{
				this.OnConfirmChanging(value);
				this.SendPropertyChanging();
				this._Confirm = value;
				this.SendPropertyChanged("Confirm");
				this.OnConfirmChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositiveLike", DbType="Int")]
	public System.Nullable<int> PositiveLike
	{
		get
		{
			return this._PositiveLike;
		}
		set
		{
			if ((this._PositiveLike != value))
			{
				this.OnPositiveLikeChanging(value);
				this.SendPropertyChanging();
				this._PositiveLike = value;
				this.SendPropertyChanged("PositiveLike");
				this.OnPositiveLikeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NegativeLike", DbType="Int")]
	public System.Nullable<int> NegativeLike
	{
		get
		{
			return this._NegativeLike;
		}
		set
		{
			if ((this._NegativeLike != value))
			{
				this.OnNegativeLikeChanging(value);
				this.SendPropertyChanging();
				this._NegativeLike = value;
				this.SendPropertyChanged("NegativeLike");
				this.OnNegativeLikeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(50)")]
	public string Ip
	{
		get
		{
			return this._Ip;
		}
		set
		{
			if ((this._Ip != value))
			{
				this.OnIpChanging(value);
				this.SendPropertyChanging();
				this._Ip = value;
				this.SendPropertyChanged("Ip");
				this.OnIpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsID", DbType="BigInt")]
	public System.Nullable<long> NewsID
	{
		get
		{
			return this._NewsID;
		}
		set
		{
			if ((this._NewsID != value))
			{
				this.OnNewsIDChanging(value);
				this.SendPropertyChanging();
				this._NewsID = value;
				this.SendPropertyChanged("NewsID");
				this.OnNewsIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsGroupTable")]
public partial class NewsGroupTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private System.Nullable<long> _LanguageID;
	
	private System.Nullable<long> _Priority;
	
	private System.Nullable<bool> _Visibility;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLanguageIDChanging(System.Nullable<long> value);
    partial void OnLanguageIDChanged();
    partial void OnPriorityChanging(System.Nullable<long> value);
    partial void OnPriorityChanged();
    partial void OnVisibilityChanging(System.Nullable<bool> value);
    partial void OnVisibilityChanged();
    #endregion
	
	public NewsGroupTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="BigInt")]
	public System.Nullable<long> LanguageID
	{
		get
		{
			return this._LanguageID;
		}
		set
		{
			if ((this._LanguageID != value))
			{
				this.OnLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._LanguageID = value;
				this.SendPropertyChanged("LanguageID");
				this.OnLanguageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="BigInt")]
	public System.Nullable<long> Priority
	{
		get
		{
			return this._Priority;
		}
		set
		{
			if ((this._Priority != value))
			{
				this.OnPriorityChanging(value);
				this.SendPropertyChanging();
				this._Priority = value;
				this.SendPropertyChanged("Priority");
				this.OnPriorityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit")]
	public System.Nullable<bool> Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsTable")]
public partial class NewsTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private System.Nullable<long> _NewsGroupID;
	
	private string _Titr;
	
	private string _PublishDateOld;
	
	private System.Nullable<System.TimeSpan> _PublishTime;
	
	private System.Nullable<System.DateTime> _PublishDate;
	
	private string _Body;
	
	private string _Image;
	
	private System.Nullable<byte> _PublishStatus;
	
	private string _RoTitr;
	
	private string _ZirTitr;
	
	private string _Keywords;
	
	private System.Nullable<bool> _ShowInSlide;
	
	private System.Nullable<bool> _Special;
	
	private System.Nullable<bool> _Comment;
	
	private System.Nullable<bool> _Rate;
	
	private System.Nullable<long> _UserID;
	
	private System.Nullable<long> _LanguageID;
	
	private System.Nullable<long> _NumberOfView;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNewsGroupIDChanging(System.Nullable<long> value);
    partial void OnNewsGroupIDChanged();
    partial void OnTitrChanging(string value);
    partial void OnTitrChanged();
    partial void OnPublishDateOldChanging(string value);
    partial void OnPublishDateOldChanged();
    partial void OnPublishTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnPublishTimeChanged();
    partial void OnPublishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishDateChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnPublishStatusChanging(System.Nullable<byte> value);
    partial void OnPublishStatusChanged();
    partial void OnRoTitrChanging(string value);
    partial void OnRoTitrChanged();
    partial void OnZirTitrChanging(string value);
    partial void OnZirTitrChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnShowInSlideChanging(System.Nullable<bool> value);
    partial void OnShowInSlideChanged();
    partial void OnSpecialChanging(System.Nullable<bool> value);
    partial void OnSpecialChanged();
    partial void OnCommentChanging(System.Nullable<bool> value);
    partial void OnCommentChanged();
    partial void OnRateChanging(System.Nullable<bool> value);
    partial void OnRateChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnLanguageIDChanging(System.Nullable<long> value);
    partial void OnLanguageIDChanged();
    partial void OnNumberOfViewChanging(System.Nullable<long> value);
    partial void OnNumberOfViewChanged();
    #endregion
	
	public NewsTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsGroupID", DbType="BigInt")]
	public System.Nullable<long> NewsGroupID
	{
		get
		{
			return this._NewsGroupID;
		}
		set
		{
			if ((this._NewsGroupID != value))
			{
				this.OnNewsGroupIDChanging(value);
				this.SendPropertyChanging();
				this._NewsGroupID = value;
				this.SendPropertyChanged("NewsGroupID");
				this.OnNewsGroupIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Titr", DbType="NVarChar(MAX)")]
	public string Titr
	{
		get
		{
			return this._Titr;
		}
		set
		{
			if ((this._Titr != value))
			{
				this.OnTitrChanging(value);
				this.SendPropertyChanging();
				this._Titr = value;
				this.SendPropertyChanged("Titr");
				this.OnTitrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDateOld", DbType="NVarChar(10)")]
	public string PublishDateOld
	{
		get
		{
			return this._PublishDateOld;
		}
		set
		{
			if ((this._PublishDateOld != value))
			{
				this.OnPublishDateOldChanging(value);
				this.SendPropertyChanging();
				this._PublishDateOld = value;
				this.SendPropertyChanged("PublishDateOld");
				this.OnPublishDateOldChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishTime", DbType="Time")]
	public System.Nullable<System.TimeSpan> PublishTime
	{
		get
		{
			return this._PublishTime;
		}
		set
		{
			if ((this._PublishTime != value))
			{
				this.OnPublishTimeChanging(value);
				this.SendPropertyChanging();
				this._PublishTime = value;
				this.SendPropertyChanged("PublishTime");
				this.OnPublishTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="Date")]
	public System.Nullable<System.DateTime> PublishDate
	{
		get
		{
			return this._PublishDate;
		}
		set
		{
			if ((this._PublishDate != value))
			{
				this.OnPublishDateChanging(value);
				this.SendPropertyChanging();
				this._PublishDate = value;
				this.SendPropertyChanged("PublishDate");
				this.OnPublishDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Body
	{
		get
		{
			return this._Body;
		}
		set
		{
			if ((this._Body != value))
			{
				this.OnBodyChanging(value);
				this.SendPropertyChanging();
				this._Body = value;
				this.SendPropertyChanged("Body");
				this.OnBodyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishStatus", DbType="TinyInt")]
	public System.Nullable<byte> PublishStatus
	{
		get
		{
			return this._PublishStatus;
		}
		set
		{
			if ((this._PublishStatus != value))
			{
				this.OnPublishStatusChanging(value);
				this.SendPropertyChanging();
				this._PublishStatus = value;
				this.SendPropertyChanged("PublishStatus");
				this.OnPublishStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoTitr", DbType="NVarChar(MAX)")]
	public string RoTitr
	{
		get
		{
			return this._RoTitr;
		}
		set
		{
			if ((this._RoTitr != value))
			{
				this.OnRoTitrChanging(value);
				this.SendPropertyChanging();
				this._RoTitr = value;
				this.SendPropertyChanged("RoTitr");
				this.OnRoTitrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZirTitr", DbType="NVarChar(MAX)")]
	public string ZirTitr
	{
		get
		{
			return this._ZirTitr;
		}
		set
		{
			if ((this._ZirTitr != value))
			{
				this.OnZirTitrChanging(value);
				this.SendPropertyChanging();
				this._ZirTitr = value;
				this.SendPropertyChanged("ZirTitr");
				this.OnZirTitrChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Keywords
	{
		get
		{
			return this._Keywords;
		}
		set
		{
			if ((this._Keywords != value))
			{
				this.OnKeywordsChanging(value);
				this.SendPropertyChanging();
				this._Keywords = value;
				this.SendPropertyChanged("Keywords");
				this.OnKeywordsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInSlide", DbType="Bit")]
	public System.Nullable<bool> ShowInSlide
	{
		get
		{
			return this._ShowInSlide;
		}
		set
		{
			if ((this._ShowInSlide != value))
			{
				this.OnShowInSlideChanging(value);
				this.SendPropertyChanging();
				this._ShowInSlide = value;
				this.SendPropertyChanged("ShowInSlide");
				this.OnShowInSlideChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Special", DbType="Bit")]
	public System.Nullable<bool> Special
	{
		get
		{
			return this._Special;
		}
		set
		{
			if ((this._Special != value))
			{
				this.OnSpecialChanging(value);
				this.SendPropertyChanging();
				this._Special = value;
				this.SendPropertyChanged("Special");
				this.OnSpecialChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="Bit")]
	public System.Nullable<bool> Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Bit")]
	public System.Nullable<bool> Rate
	{
		get
		{
			return this._Rate;
		}
		set
		{
			if ((this._Rate != value))
			{
				this.OnRateChanging(value);
				this.SendPropertyChanging();
				this._Rate = value;
				this.SendPropertyChanged("Rate");
				this.OnRateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="BigInt")]
	public System.Nullable<long> LanguageID
	{
		get
		{
			return this._LanguageID;
		}
		set
		{
			if ((this._LanguageID != value))
			{
				this.OnLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._LanguageID = value;
				this.SendPropertyChanged("LanguageID");
				this.OnLanguageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfView", DbType="BigInt")]
	public System.Nullable<long> NumberOfView
	{
		get
		{
			return this._NumberOfView;
		}
		set
		{
			if ((this._NumberOfView != value))
			{
				this.OnNumberOfViewChanging(value);
				this.SendPropertyChanging();
				this._NumberOfView = value;
				this.SendPropertyChanged("NumberOfView");
				this.OnNumberOfViewChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OurServiceTable")]
public partial class OurServiceTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Title;
	
	private string _Image;
	
	private string _Description;
	
	private System.Nullable<bool> _Visibility;
	
	private System.Nullable<long> _Priority;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVisibilityChanging(System.Nullable<bool> value);
    partial void OnVisibilityChanged();
    partial void OnPriorityChanging(System.Nullable<long> value);
    partial void OnPriorityChanged();
    #endregion
	
	public OurServiceTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit")]
	public System.Nullable<bool> Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="BigInt")]
	public System.Nullable<long> Priority
	{
		get
		{
			return this._Priority;
		}
		set
		{
			if ((this._Priority != value))
			{
				this.OnPriorityChanging(value);
				this.SendPropertyChanging();
				this._Priority = value;
				this.SendPropertyChanged("Priority");
				this.OnPriorityChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackageGroupTable")]
public partial class PackageGroupTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Name;
	
	private string _Description;
	
	private System.Nullable<bool> _Visibility;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVisibilityChanging(System.Nullable<bool> value);
    partial void OnVisibilityChanged();
    #endregion
	
	public PackageGroupTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit")]
	public System.Nullable<bool> Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PackageTable")]
public partial class PackageTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private System.Nullable<long> _Price;
	
	private System.Nullable<long> _Discount;
	
	private System.Nullable<byte> _Percent;
	
	private System.Nullable<byte> _Expire;
	
	private string _Description;
	
	private System.Nullable<bool> _Visibility;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private System.Nullable<int> _Status;
	
	private string _MinResponse;
	
	private string _MaxResponse;
	
	private System.Nullable<bool> _IsExpert;
	
	private System.Nullable<int> _GroupID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(System.Nullable<long> value);
    partial void OnPriceChanged();
    partial void OnDiscountChanging(System.Nullable<long> value);
    partial void OnDiscountChanged();
    partial void OnPercentChanging(System.Nullable<byte> value);
    partial void OnPercentChanged();
    partial void OnExpireChanging(System.Nullable<byte> value);
    partial void OnExpireChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVisibilityChanging(System.Nullable<bool> value);
    partial void OnVisibilityChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnMinResponseChanging(string value);
    partial void OnMinResponseChanged();
    partial void OnMaxResponseChanging(string value);
    partial void OnMaxResponseChanged();
    partial void OnIsExpertChanging(System.Nullable<bool> value);
    partial void OnIsExpertChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    #endregion
	
	public PackageTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="BigInt")]
	public System.Nullable<long> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="BigInt")]
	public System.Nullable<long> Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this.OnDiscountChanging(value);
				this.SendPropertyChanging();
				this._Discount = value;
				this.SendPropertyChanged("Discount");
				this.OnDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Percent]", Storage="_Percent", DbType="TinyInt")]
	public System.Nullable<byte> Percent
	{
		get
		{
			return this._Percent;
		}
		set
		{
			if ((this._Percent != value))
			{
				this.OnPercentChanging(value);
				this.SendPropertyChanging();
				this._Percent = value;
				this.SendPropertyChanged("Percent");
				this.OnPercentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expire", DbType="TinyInt")]
	public System.Nullable<byte> Expire
	{
		get
		{
			return this._Expire;
		}
		set
		{
			if ((this._Expire != value))
			{
				this.OnExpireChanging(value);
				this.SendPropertyChanging();
				this._Expire = value;
				this.SendPropertyChanged("Expire");
				this.OnExpireChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit")]
	public System.Nullable<bool> Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
	public System.Nullable<int> Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinResponse", DbType="NVarChar(50)")]
	public string MinResponse
	{
		get
		{
			return this._MinResponse;
		}
		set
		{
			if ((this._MinResponse != value))
			{
				this.OnMinResponseChanging(value);
				this.SendPropertyChanging();
				this._MinResponse = value;
				this.SendPropertyChanged("MinResponse");
				this.OnMinResponseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxResponse", DbType="NVarChar(50)")]
	public string MaxResponse
	{
		get
		{
			return this._MaxResponse;
		}
		set
		{
			if ((this._MaxResponse != value))
			{
				this.OnMaxResponseChanging(value);
				this.SendPropertyChanging();
				this._MaxResponse = value;
				this.SendPropertyChanged("MaxResponse");
				this.OnMaxResponseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExpert", DbType="Bit")]
	public System.Nullable<bool> IsExpert
	{
		get
		{
			return this._IsExpert;
		}
		set
		{
			if ((this._IsExpert != value))
			{
				this.OnIsExpertChanging(value);
				this.SendPropertyChanging();
				this._IsExpert = value;
				this.SendPropertyChanged("IsExpert");
				this.OnIsExpertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
	public System.Nullable<int> GroupID
	{
		get
		{
			return this._GroupID;
		}
		set
		{
			if ((this._GroupID != value))
			{
				this.OnGroupIDChanging(value);
				this.SendPropertyChanging();
				this._GroupID = value;
				this.SendPropertyChanged("GroupID");
				this.OnGroupIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageTable")]
public partial class PageTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _FileName;
	
	private string _Title;
	
	private string _Body;
	
	private string _Keywords;
	
	private string _Image;
	
	private string _Template;
	
	private string _Css;
	
	private string _Js;
	
	private bool _Visibility;
	
	private System.Nullable<long> _LanguageID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnTemplateChanging(string value);
    partial void OnTemplateChanged();
    partial void OnCssChanging(string value);
    partial void OnCssChanged();
    partial void OnJsChanging(string value);
    partial void OnJsChanged();
    partial void OnVisibilityChanging(bool value);
    partial void OnVisibilityChanged();
    partial void OnLanguageIDChanging(System.Nullable<long> value);
    partial void OnLanguageIDChanged();
    #endregion
	
	public PageTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(MAX)")]
	public string FileName
	{
		get
		{
			return this._FileName;
		}
		set
		{
			if ((this._FileName != value))
			{
				this.OnFileNameChanging(value);
				this.SendPropertyChanging();
				this._FileName = value;
				this.SendPropertyChanged("FileName");
				this.OnFileNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Body
	{
		get
		{
			return this._Body;
		}
		set
		{
			if ((this._Body != value))
			{
				this.OnBodyChanging(value);
				this.SendPropertyChanging();
				this._Body = value;
				this.SendPropertyChanged("Body");
				this.OnBodyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Keywords
	{
		get
		{
			return this._Keywords;
		}
		set
		{
			if ((this._Keywords != value))
			{
				this.OnKeywordsChanging(value);
				this.SendPropertyChanging();
				this._Keywords = value;
				this.SendPropertyChanged("Keywords");
				this.OnKeywordsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(MAX)")]
	public string Template
	{
		get
		{
			return this._Template;
		}
		set
		{
			if ((this._Template != value))
			{
				this.OnTemplateChanging(value);
				this.SendPropertyChanging();
				this._Template = value;
				this.SendPropertyChanged("Template");
				this.OnTemplateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Css", DbType="NVarChar(MAX)")]
	public string Css
	{
		get
		{
			return this._Css;
		}
		set
		{
			if ((this._Css != value))
			{
				this.OnCssChanging(value);
				this.SendPropertyChanging();
				this._Css = value;
				this.SendPropertyChanged("Css");
				this.OnCssChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Js", DbType="NVarChar(MAX)")]
	public string Js
	{
		get
		{
			return this._Js;
		}
		set
		{
			if ((this._Js != value))
			{
				this.OnJsChanging(value);
				this.SendPropertyChanging();
				this._Js = value;
				this.SendPropertyChanged("Js");
				this.OnJsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit NOT NULL")]
	public bool Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="BigInt")]
	public System.Nullable<long> LanguageID
	{
		get
		{
			return this._LanguageID;
		}
		set
		{
			if ((this._LanguageID != value))
			{
				this.OnLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._LanguageID = value;
				this.SendPropertyChanged("LanguageID");
				this.OnLanguageIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PermissionTable")]
public partial class PermissionTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private System.Nullable<long> _UserID;
	
	private System.Nullable<long> _GroupID;
	
	private int _ModuleID;
	
	private bool _Show;
	
	private bool _Insert;
	
	private bool _Update;
	
	private bool _Delete;
	
	private EntityRef<ModuleTable> _ModuleTable;
	
	private EntityRef<UserGroupTable> _UserGroupTable;
	
	private EntityRef<UserTable> _UserTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    partial void OnGroupIDChanging(System.Nullable<long> value);
    partial void OnGroupIDChanged();
    partial void OnModuleIDChanging(int value);
    partial void OnModuleIDChanged();
    partial void OnShowChanging(bool value);
    partial void OnShowChanged();
    partial void OnInsertChanging(bool value);
    partial void OnInsertChanged();
    partial void OnUpdateChanging(bool value);
    partial void OnUpdateChanged();
    partial void OnDeleteChanging(bool value);
    partial void OnDeleteChanged();
    #endregion
	
	public PermissionTable()
	{
		this._ModuleTable = default(EntityRef<ModuleTable>);
		this._UserGroupTable = default(EntityRef<UserGroupTable>);
		this._UserTable = default(EntityRef<UserTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._UserTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="BigInt")]
	public System.Nullable<long> GroupID
	{
		get
		{
			return this._GroupID;
		}
		set
		{
			if ((this._GroupID != value))
			{
				if (this._UserGroupTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnGroupIDChanging(value);
				this.SendPropertyChanging();
				this._GroupID = value;
				this.SendPropertyChanged("GroupID");
				this.OnGroupIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
	public int ModuleID
	{
		get
		{
			return this._ModuleID;
		}
		set
		{
			if ((this._ModuleID != value))
			{
				if (this._ModuleTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnModuleIDChanging(value);
				this.SendPropertyChanging();
				this._ModuleID = value;
				this.SendPropertyChanged("ModuleID");
				this.OnModuleIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show", DbType="Bit NOT NULL")]
	public bool Show
	{
		get
		{
			return this._Show;
		}
		set
		{
			if ((this._Show != value))
			{
				this.OnShowChanging(value);
				this.SendPropertyChanging();
				this._Show = value;
				this.SendPropertyChanged("Show");
				this.OnShowChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Insert]", Storage="_Insert", DbType="Bit NOT NULL")]
	public bool Insert
	{
		get
		{
			return this._Insert;
		}
		set
		{
			if ((this._Insert != value))
			{
				this.OnInsertChanging(value);
				this.SendPropertyChanging();
				this._Insert = value;
				this.SendPropertyChanged("Insert");
				this.OnInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Update]", Storage="_Update", DbType="Bit NOT NULL")]
	public bool Update
	{
		get
		{
			return this._Update;
		}
		set
		{
			if ((this._Update != value))
			{
				this.OnUpdateChanging(value);
				this.SendPropertyChanging();
				this._Update = value;
				this.SendPropertyChanged("Update");
				this.OnUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Delete]", Storage="_Delete", DbType="Bit NOT NULL")]
	public bool Delete
	{
		get
		{
			return this._Delete;
		}
		set
		{
			if ((this._Delete != value))
			{
				this.OnDeleteChanging(value);
				this.SendPropertyChanging();
				this._Delete = value;
				this.SendPropertyChanged("Delete");
				this.OnDeleteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModuleTable_PermissionTable", Storage="_ModuleTable", ThisKey="ModuleID", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public ModuleTable ModuleTable
	{
		get
		{
			return this._ModuleTable.Entity;
		}
		set
		{
			ModuleTable previousValue = this._ModuleTable.Entity;
			if (((previousValue != value) 
						|| (this._ModuleTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ModuleTable.Entity = null;
					previousValue.PermissionTables.Remove(this);
				}
				this._ModuleTable.Entity = value;
				if ((value != null))
				{
					value.PermissionTables.Add(this);
					this._ModuleID = value.Id;
				}
				else
				{
					this._ModuleID = default(int);
				}
				this.SendPropertyChanged("ModuleTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroupTable_PermissionTable", Storage="_UserGroupTable", ThisKey="GroupID", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
	public UserGroupTable UserGroupTable
	{
		get
		{
			return this._UserGroupTable.Entity;
		}
		set
		{
			UserGroupTable previousValue = this._UserGroupTable.Entity;
			if (((previousValue != value) 
						|| (this._UserGroupTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserGroupTable.Entity = null;
					previousValue.PermissionTables.Remove(this);
				}
				this._UserGroupTable.Entity = value;
				if ((value != null))
				{
					value.PermissionTables.Add(this);
					this._GroupID = value.Id;
				}
				else
				{
					this._GroupID = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserGroupTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTable_PermissionTable", Storage="_UserTable", ThisKey="UserID", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
	public UserTable UserTable
	{
		get
		{
			return this._UserTable.Entity;
		}
		set
		{
			UserTable previousValue = this._UserTable.Entity;
			if (((previousValue != value) 
						|| (this._UserTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserTable.Entity = null;
					previousValue.PermissionTables.Remove(this);
				}
				this._UserTable.Entity = value;
				if ((value != null))
				{
					value.PermissionTables.Add(this);
					this._UserID = value.Id;
				}
				else
				{
					this._UserID = default(Nullable<long>);
				}
				this.SendPropertyChanged("UserTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PollAnswerTable")]
public partial class PollAnswerTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private System.Nullable<long> _PollsID;
	
	private string _Answer;
	
	private System.Nullable<int> _Count;
	
	private EntityRef<PollTable> _PollTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPollsIDChanging(System.Nullable<long> value);
    partial void OnPollsIDChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnCountChanging(System.Nullable<int> value);
    partial void OnCountChanged();
    #endregion
	
	public PollAnswerTable()
	{
		this._PollTable = default(EntityRef<PollTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PollsID", DbType="BigInt")]
	public System.Nullable<long> PollsID
	{
		get
		{
			return this._PollsID;
		}
		set
		{
			if ((this._PollsID != value))
			{
				if (this._PollTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPollsIDChanging(value);
				this.SendPropertyChanging();
				this._PollsID = value;
				this.SendPropertyChanged("PollsID");
				this.OnPollsIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(MAX)")]
	public string Answer
	{
		get
		{
			return this._Answer;
		}
		set
		{
			if ((this._Answer != value))
			{
				this.OnAnswerChanging(value);
				this.SendPropertyChanging();
				this._Answer = value;
				this.SendPropertyChanged("Answer");
				this.OnAnswerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
	public System.Nullable<int> Count
	{
		get
		{
			return this._Count;
		}
		set
		{
			if ((this._Count != value))
			{
				this.OnCountChanging(value);
				this.SendPropertyChanging();
				this._Count = value;
				this.SendPropertyChanged("Count");
				this.OnCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PollTable_PollAnswerTable", Storage="_PollTable", ThisKey="PollsID", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
	public PollTable PollTable
	{
		get
		{
			return this._PollTable.Entity;
		}
		set
		{
			PollTable previousValue = this._PollTable.Entity;
			if (((previousValue != value) 
						|| (this._PollTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PollTable.Entity = null;
					previousValue.PollAnswerTables.Remove(this);
				}
				this._PollTable.Entity = value;
				if ((value != null))
				{
					value.PollAnswerTables.Add(this);
					this._PollsID = value.Id;
				}
				else
				{
					this._PollsID = default(Nullable<long>);
				}
				this.SendPropertyChanged("PollTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PollTable")]
public partial class PollTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private System.Nullable<System.DateTime> _RegDate;
	
	private System.Nullable<bool> _IsActive;
	
	private EntitySet<PollAnswerTable> _PollAnswerTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
	
	public PollTable()
	{
		this._PollAnswerTables = new EntitySet<PollAnswerTable>(new Action<PollAnswerTable>(this.attach_PollAnswerTables), new Action<PollAnswerTable>(this.detach_PollAnswerTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegDate
	{
		get
		{
			return this._RegDate;
		}
		set
		{
			if ((this._RegDate != value))
			{
				this.OnRegDateChanging(value);
				this.SendPropertyChanging();
				this._RegDate = value;
				this.SendPropertyChanged("RegDate");
				this.OnRegDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PollTable_PollAnswerTable", Storage="_PollAnswerTables", ThisKey="Id", OtherKey="PollsID")]
	public EntitySet<PollAnswerTable> PollAnswerTables
	{
		get
		{
			return this._PollAnswerTables;
		}
		set
		{
			this._PollAnswerTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PollAnswerTables(PollAnswerTable entity)
	{
		this.SendPropertyChanging();
		entity.PollTable = this;
	}
	
	private void detach_PollAnswerTables(PollAnswerTable entity)
	{
		this.SendPropertyChanging();
		entity.PollTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SlideTable")]
public partial class SlideTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Image;
	
	private string _AlternativeText;
	
	private string _Link;
	
	private string _OpenLink;
	
	private System.Nullable<byte> _ShowTime;
	
	private System.Nullable<long> _Priority;
	
	private System.Nullable<long> _LanguageID;
	
	private bool _Visibility;
	
	private string _Title1;
	
	private string _Title2;
	
	private string _Title3;
	
	private System.Nullable<long> _UserID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnAlternativeTextChanging(string value);
    partial void OnAlternativeTextChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnOpenLinkChanging(string value);
    partial void OnOpenLinkChanged();
    partial void OnShowTimeChanging(System.Nullable<byte> value);
    partial void OnShowTimeChanged();
    partial void OnPriorityChanging(System.Nullable<long> value);
    partial void OnPriorityChanged();
    partial void OnLanguageIDChanging(System.Nullable<long> value);
    partial void OnLanguageIDChanged();
    partial void OnVisibilityChanging(bool value);
    partial void OnVisibilityChanged();
    partial void OnTitle1Changing(string value);
    partial void OnTitle1Changed();
    partial void OnTitle2Changing(string value);
    partial void OnTitle2Changed();
    partial void OnTitle3Changing(string value);
    partial void OnTitle3Changed();
    partial void OnUserIDChanging(System.Nullable<long> value);
    partial void OnUserIDChanged();
    #endregion
	
	public SlideTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternativeText", DbType="NVarChar(MAX)")]
	public string AlternativeText
	{
		get
		{
			return this._AlternativeText;
		}
		set
		{
			if ((this._AlternativeText != value))
			{
				this.OnAlternativeTextChanging(value);
				this.SendPropertyChanging();
				this._AlternativeText = value;
				this.SendPropertyChanged("AlternativeText");
				this.OnAlternativeTextChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX)")]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenLink", DbType="NVarChar(50)")]
	public string OpenLink
	{
		get
		{
			return this._OpenLink;
		}
		set
		{
			if ((this._OpenLink != value))
			{
				this.OnOpenLinkChanging(value);
				this.SendPropertyChanging();
				this._OpenLink = value;
				this.SendPropertyChanged("OpenLink");
				this.OnOpenLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowTime", DbType="TinyInt")]
	public System.Nullable<byte> ShowTime
	{
		get
		{
			return this._ShowTime;
		}
		set
		{
			if ((this._ShowTime != value))
			{
				this.OnShowTimeChanging(value);
				this.SendPropertyChanging();
				this._ShowTime = value;
				this.SendPropertyChanged("ShowTime");
				this.OnShowTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="BigInt")]
	public System.Nullable<long> Priority
	{
		get
		{
			return this._Priority;
		}
		set
		{
			if ((this._Priority != value))
			{
				this.OnPriorityChanging(value);
				this.SendPropertyChanging();
				this._Priority = value;
				this.SendPropertyChanged("Priority");
				this.OnPriorityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="BigInt")]
	public System.Nullable<long> LanguageID
	{
		get
		{
			return this._LanguageID;
		}
		set
		{
			if ((this._LanguageID != value))
			{
				this.OnLanguageIDChanging(value);
				this.SendPropertyChanging();
				this._LanguageID = value;
				this.SendPropertyChanged("LanguageID");
				this.OnLanguageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit NOT NULL")]
	public bool Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title1", DbType="NVarChar(MAX)")]
	public string Title1
	{
		get
		{
			return this._Title1;
		}
		set
		{
			if ((this._Title1 != value))
			{
				this.OnTitle1Changing(value);
				this.SendPropertyChanging();
				this._Title1 = value;
				this.SendPropertyChanged("Title1");
				this.OnTitle1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title2", DbType="NVarChar(MAX)")]
	public string Title2
	{
		get
		{
			return this._Title2;
		}
		set
		{
			if ((this._Title2 != value))
			{
				this.OnTitle2Changing(value);
				this.SendPropertyChanging();
				this._Title2 = value;
				this.SendPropertyChanged("Title2");
				this.OnTitle2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title3", DbType="NVarChar(MAX)")]
	public string Title3
	{
		get
		{
			return this._Title3;
		}
		set
		{
			if ((this._Title3 != value))
			{
				this.OnTitle3Changing(value);
				this.SendPropertyChanging();
				this._Title3 = value;
				this.SendPropertyChanged("Title3");
				this.OnTitle3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt")]
	public System.Nullable<long> UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TelegramLotteryUsers")]
public partial class TelegramLotteryUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private long _UserId;
	
	private long _LotteryId;
	
	private string _RegisterDate;
	
	private string _RegisterTime;
	
	private System.Nullable<bool> _Winner;
	
	private EntityRef<TelegramUser> _TelegramUser;
	
	private EntityRef<TelegramLottery> _TelegramLottery;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnLotteryIdChanging(long value);
    partial void OnLotteryIdChanged();
    partial void OnRegisterDateChanging(string value);
    partial void OnRegisterDateChanged();
    partial void OnRegisterTimeChanging(string value);
    partial void OnRegisterTimeChanged();
    partial void OnWinnerChanging(System.Nullable<bool> value);
    partial void OnWinnerChanged();
    #endregion
	
	public TelegramLotteryUser()
	{
		this._TelegramUser = default(EntityRef<TelegramUser>);
		this._TelegramLottery = default(EntityRef<TelegramLottery>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
	public long UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._TelegramUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotteryId", DbType="BigInt NOT NULL")]
	public long LotteryId
	{
		get
		{
			return this._LotteryId;
		}
		set
		{
			if ((this._LotteryId != value))
			{
				if (this._TelegramLottery.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnLotteryIdChanging(value);
				this.SendPropertyChanging();
				this._LotteryId = value;
				this.SendPropertyChanged("LotteryId");
				this.OnLotteryIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterDate", DbType="NVarChar(50)")]
	public string RegisterDate
	{
		get
		{
			return this._RegisterDate;
		}
		set
		{
			if ((this._RegisterDate != value))
			{
				this.OnRegisterDateChanging(value);
				this.SendPropertyChanging();
				this._RegisterDate = value;
				this.SendPropertyChanged("RegisterDate");
				this.OnRegisterDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterTime", DbType="NVarChar(50)")]
	public string RegisterTime
	{
		get
		{
			return this._RegisterTime;
		}
		set
		{
			if ((this._RegisterTime != value))
			{
				this.OnRegisterTimeChanging(value);
				this.SendPropertyChanging();
				this._RegisterTime = value;
				this.SendPropertyChanged("RegisterTime");
				this.OnRegisterTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Winner", DbType="Bit")]
	public System.Nullable<bool> Winner
	{
		get
		{
			return this._Winner;
		}
		set
		{
			if ((this._Winner != value))
			{
				this.OnWinnerChanging(value);
				this.SendPropertyChanging();
				this._Winner = value;
				this.SendPropertyChanged("Winner");
				this.OnWinnerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TelegramUser_TelegramLotteryUser", Storage="_TelegramUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
	public TelegramUser TelegramUser
	{
		get
		{
			return this._TelegramUser.Entity;
		}
		set
		{
			TelegramUser previousValue = this._TelegramUser.Entity;
			if (((previousValue != value) 
						|| (this._TelegramUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TelegramUser.Entity = null;
					previousValue.TelegramLotteryUsers.Remove(this);
				}
				this._TelegramUser.Entity = value;
				if ((value != null))
				{
					value.TelegramLotteryUsers.Add(this);
					this._UserId = value.Id;
				}
				else
				{
					this._UserId = default(long);
				}
				this.SendPropertyChanged("TelegramUser");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TelegramLottery_TelegramLotteryUser", Storage="_TelegramLottery", ThisKey="LotteryId", OtherKey="Id", IsForeignKey=true)]
	public TelegramLottery TelegramLottery
	{
		get
		{
			return this._TelegramLottery.Entity;
		}
		set
		{
			TelegramLottery previousValue = this._TelegramLottery.Entity;
			if (((previousValue != value) 
						|| (this._TelegramLottery.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TelegramLottery.Entity = null;
					previousValue.TelegramLotteryUsers.Remove(this);
				}
				this._TelegramLottery.Entity = value;
				if ((value != null))
				{
					value.TelegramLotteryUsers.Add(this);
					this._LotteryId = value.Id;
				}
				else
				{
					this._LotteryId = default(long);
				}
				this.SendPropertyChanged("TelegramLottery");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TelegramUsers")]
public partial class TelegramUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _OS;
	
	private string _CustomerID;
	
	private string _CustomerName;
	
	private string _CustomerLastName;
	
	private string _CustomerEmail;
	
	private string _CustomerMobile;
	
	private string _FavoriteContent;
	
	private string _RegisterDate;
	
	private string _RegisterTime;
	
	private System.Nullable<bool> _Active;
	
	private System.Nullable<bool> _TceUser;
	
	private EntitySet<TelegramLotteryUser> _TelegramLotteryUsers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnOSChanging(string value);
    partial void OnOSChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerLastNameChanging(string value);
    partial void OnCustomerLastNameChanged();
    partial void OnCustomerEmailChanging(string value);
    partial void OnCustomerEmailChanged();
    partial void OnCustomerMobileChanging(string value);
    partial void OnCustomerMobileChanged();
    partial void OnFavoriteContentChanging(string value);
    partial void OnFavoriteContentChanged();
    partial void OnRegisterDateChanging(string value);
    partial void OnRegisterDateChanged();
    partial void OnRegisterTimeChanging(string value);
    partial void OnRegisterTimeChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnTceUserChanging(System.Nullable<bool> value);
    partial void OnTceUserChanged();
    #endregion
	
	public TelegramUser()
	{
		this._TelegramLotteryUsers = new EntitySet<TelegramLotteryUser>(new Action<TelegramLotteryUser>(this.attach_TelegramLotteryUsers), new Action<TelegramLotteryUser>(this.detach_TelegramLotteryUsers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS", DbType="NVarChar(50)")]
	public string OS
	{
		get
		{
			return this._OS;
		}
		set
		{
			if ((this._OS != value))
			{
				this.OnOSChanging(value);
				this.SendPropertyChanging();
				this._OS = value;
				this.SendPropertyChanged("OS");
				this.OnOSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50)")]
	public string CustomerID
	{
		get
		{
			return this._CustomerID;
		}
		set
		{
			if ((this._CustomerID != value))
			{
				this.OnCustomerIDChanging(value);
				this.SendPropertyChanging();
				this._CustomerID = value;
				this.SendPropertyChanged("CustomerID");
				this.OnCustomerIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(200)")]
	public string CustomerName
	{
		get
		{
			return this._CustomerName;
		}
		set
		{
			if ((this._CustomerName != value))
			{
				this.OnCustomerNameChanging(value);
				this.SendPropertyChanging();
				this._CustomerName = value;
				this.SendPropertyChanged("CustomerName");
				this.OnCustomerNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerLastName", DbType="NVarChar(200)")]
	public string CustomerLastName
	{
		get
		{
			return this._CustomerLastName;
		}
		set
		{
			if ((this._CustomerLastName != value))
			{
				this.OnCustomerLastNameChanging(value);
				this.SendPropertyChanging();
				this._CustomerLastName = value;
				this.SendPropertyChanged("CustomerLastName");
				this.OnCustomerLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEmail", DbType="NVarChar(50)")]
	public string CustomerEmail
	{
		get
		{
			return this._CustomerEmail;
		}
		set
		{
			if ((this._CustomerEmail != value))
			{
				this.OnCustomerEmailChanging(value);
				this.SendPropertyChanging();
				this._CustomerEmail = value;
				this.SendPropertyChanged("CustomerEmail");
				this.OnCustomerEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerMobile", DbType="NVarChar(15)")]
	public string CustomerMobile
	{
		get
		{
			return this._CustomerMobile;
		}
		set
		{
			if ((this._CustomerMobile != value))
			{
				this.OnCustomerMobileChanging(value);
				this.SendPropertyChanging();
				this._CustomerMobile = value;
				this.SendPropertyChanged("CustomerMobile");
				this.OnCustomerMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FavoriteContent", DbType="NVarChar(200)")]
	public string FavoriteContent
	{
		get
		{
			return this._FavoriteContent;
		}
		set
		{
			if ((this._FavoriteContent != value))
			{
				this.OnFavoriteContentChanging(value);
				this.SendPropertyChanging();
				this._FavoriteContent = value;
				this.SendPropertyChanged("FavoriteContent");
				this.OnFavoriteContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterDate", DbType="NVarChar(50)")]
	public string RegisterDate
	{
		get
		{
			return this._RegisterDate;
		}
		set
		{
			if ((this._RegisterDate != value))
			{
				this.OnRegisterDateChanging(value);
				this.SendPropertyChanging();
				this._RegisterDate = value;
				this.SendPropertyChanged("RegisterDate");
				this.OnRegisterDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterTime", DbType="NVarChar(50)")]
	public string RegisterTime
	{
		get
		{
			return this._RegisterTime;
		}
		set
		{
			if ((this._RegisterTime != value))
			{
				this.OnRegisterTimeChanging(value);
				this.SendPropertyChanging();
				this._RegisterTime = value;
				this.SendPropertyChanged("RegisterTime");
				this.OnRegisterTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
	public System.Nullable<bool> Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TceUser", DbType="Bit")]
	public System.Nullable<bool> TceUser
	{
		get
		{
			return this._TceUser;
		}
		set
		{
			if ((this._TceUser != value))
			{
				this.OnTceUserChanging(value);
				this.SendPropertyChanging();
				this._TceUser = value;
				this.SendPropertyChanged("TceUser");
				this.OnTceUserChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TelegramUser_TelegramLotteryUser", Storage="_TelegramLotteryUsers", ThisKey="Id", OtherKey="UserId")]
	public EntitySet<TelegramLotteryUser> TelegramLotteryUsers
	{
		get
		{
			return this._TelegramLotteryUsers;
		}
		set
		{
			this._TelegramLotteryUsers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TelegramLotteryUsers(TelegramLotteryUser entity)
	{
		this.SendPropertyChanging();
		entity.TelegramUser = this;
	}
	
	private void detach_TelegramLotteryUsers(TelegramLotteryUser entity)
	{
		this.SendPropertyChanging();
		entity.TelegramUser = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGroupAccessTable")]
public partial class UserGroupAccessTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private long _UserID;
	
	private long _GroupID;
	
	private EntityRef<UserGroupTable> _UserGroupTable;
	
	private EntityRef<UserTable> _UserTable;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnGroupIDChanging(long value);
    partial void OnGroupIDChanged();
    #endregion
	
	public UserGroupAccessTable()
	{
		this._UserGroupTable = default(EntityRef<UserGroupTable>);
		this._UserTable = default(EntityRef<UserTable>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="BigInt NOT NULL")]
	public long UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				if (this._UserTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="BigInt NOT NULL")]
	public long GroupID
	{
		get
		{
			return this._GroupID;
		}
		set
		{
			if ((this._GroupID != value))
			{
				if (this._UserGroupTable.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnGroupIDChanging(value);
				this.SendPropertyChanging();
				this._GroupID = value;
				this.SendPropertyChanged("GroupID");
				this.OnGroupIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroupTable_UserGroupAccessTable", Storage="_UserGroupTable", ThisKey="GroupID", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public UserGroupTable UserGroupTable
	{
		get
		{
			return this._UserGroupTable.Entity;
		}
		set
		{
			UserGroupTable previousValue = this._UserGroupTable.Entity;
			if (((previousValue != value) 
						|| (this._UserGroupTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserGroupTable.Entity = null;
					previousValue.UserGroupAccessTables.Remove(this);
				}
				this._UserGroupTable.Entity = value;
				if ((value != null))
				{
					value.UserGroupAccessTables.Add(this);
					this._GroupID = value.Id;
				}
				else
				{
					this._GroupID = default(long);
				}
				this.SendPropertyChanged("UserGroupTable");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTable_UserGroupAccessTable", Storage="_UserTable", ThisKey="UserID", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public UserTable UserTable
	{
		get
		{
			return this._UserTable.Entity;
		}
		set
		{
			UserTable previousValue = this._UserTable.Entity;
			if (((previousValue != value) 
						|| (this._UserTable.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._UserTable.Entity = null;
					previousValue.UserGroupAccessTables.Remove(this);
				}
				this._UserTable.Entity = value;
				if ((value != null))
				{
					value.UserGroupAccessTables.Add(this);
					this._UserID = value.Id;
				}
				else
				{
					this._UserID = default(long);
				}
				this.SendPropertyChanged("UserTable");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGroupTable")]
public partial class UserGroupTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private bool _Visibility;
	
	private EntitySet<PermissionTable> _PermissionTables;
	
	private EntitySet<UserGroupAccessTable> _UserGroupAccessTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnVisibilityChanging(bool value);
    partial void OnVisibilityChanged();
    #endregion
	
	public UserGroupTable()
	{
		this._PermissionTables = new EntitySet<PermissionTable>(new Action<PermissionTable>(this.attach_PermissionTables), new Action<PermissionTable>(this.detach_PermissionTables));
		this._UserGroupAccessTables = new EntitySet<UserGroupAccessTable>(new Action<UserGroupAccessTable>(this.attach_UserGroupAccessTables), new Action<UserGroupAccessTable>(this.detach_UserGroupAccessTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Bit NOT NULL")]
	public bool Visibility
	{
		get
		{
			return this._Visibility;
		}
		set
		{
			if ((this._Visibility != value))
			{
				this.OnVisibilityChanging(value);
				this.SendPropertyChanging();
				this._Visibility = value;
				this.SendPropertyChanged("Visibility");
				this.OnVisibilityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroupTable_PermissionTable", Storage="_PermissionTables", ThisKey="Id", OtherKey="GroupID")]
	public EntitySet<PermissionTable> PermissionTables
	{
		get
		{
			return this._PermissionTables;
		}
		set
		{
			this._PermissionTables.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroupTable_UserGroupAccessTable", Storage="_UserGroupAccessTables", ThisKey="Id", OtherKey="GroupID")]
	public EntitySet<UserGroupAccessTable> UserGroupAccessTables
	{
		get
		{
			return this._UserGroupAccessTables;
		}
		set
		{
			this._UserGroupAccessTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PermissionTables(PermissionTable entity)
	{
		this.SendPropertyChanging();
		entity.UserGroupTable = this;
	}
	
	private void detach_PermissionTables(PermissionTable entity)
	{
		this.SendPropertyChanging();
		entity.UserGroupTable = null;
	}
	
	private void attach_UserGroupAccessTables(UserGroupAccessTable entity)
	{
		this.SendPropertyChanging();
		entity.UserGroupTable = this;
	}
	
	private void detach_UserGroupAccessTables(UserGroupAccessTable entity)
	{
		this.SendPropertyChanging();
		entity.UserGroupTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTable")]
public partial class UserTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Name;
	
	private string _Family;
	
	private string _Address;
	
	private string _Tel;
	
	private string _ImageUrl;
	
	private System.Nullable<System.DateTime> _Birthday;
	
	private System.Nullable<bool> _Gender;
	
	private string _ZipCode;
	
	private string _City;
	
	private string _Website;
	
	private string _Email;
	
	private string _Twitter;
	
	private string _Facebook;
	
	private string _GooglePlus;
	
	private string _Github;
	
	private string _Linkedin;
	
	private string _Skype;
	
	private string _Username;
	
	private string _Password;
	
	private System.Nullable<System.DateTime> _LoginDate;
	
	private System.Nullable<System.DateTime> _LogoutDate;
	
	private System.Nullable<System.DateTime> _RegDate;
	
	private string _Description;
	
	private System.Nullable<bool> _IsDelete;
	
	private string _Ip;
	
	private System.Nullable<bool> _EmailConfirmed;
	
	private System.Nullable<int> _AccessFailedCount;
	
	private System.Nullable<bool> _MobileConfirmed;
	
	private string _ChangePassRequestCode;
	
	private System.Nullable<System.DateTime> _ChangePassRequestDate;
	
	private System.Nullable<long> _ParentID;
	
	private string _CardNumber;
	
	private string _AccountNumber;
	
	private System.Nullable<long> _EmployeeID;
	
	private System.Nullable<long> _RegUserID;
	
	private EntitySet<PermissionTable> _PermissionTables;
	
	private EntitySet<UserGroupAccessTable> _UserGroupAccessTables;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFamilyChanging(string value);
    partial void OnFamilyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnGenderChanging(System.Nullable<bool> value);
    partial void OnGenderChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTwitterChanging(string value);
    partial void OnTwitterChanged();
    partial void OnFacebookChanging(string value);
    partial void OnFacebookChanged();
    partial void OnGooglePlusChanging(string value);
    partial void OnGooglePlusChanged();
    partial void OnGithubChanging(string value);
    partial void OnGithubChanged();
    partial void OnLinkedinChanging(string value);
    partial void OnLinkedinChanged();
    partial void OnSkypeChanging(string value);
    partial void OnSkypeChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLoginDateChanged();
    partial void OnLogoutDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogoutDateChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsDeleteChanging(System.Nullable<bool> value);
    partial void OnIsDeleteChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnEmailConfirmedChanging(System.Nullable<bool> value);
    partial void OnEmailConfirmedChanged();
    partial void OnAccessFailedCountChanging(System.Nullable<int> value);
    partial void OnAccessFailedCountChanged();
    partial void OnMobileConfirmedChanging(System.Nullable<bool> value);
    partial void OnMobileConfirmedChanged();
    partial void OnChangePassRequestCodeChanging(string value);
    partial void OnChangePassRequestCodeChanged();
    partial void OnChangePassRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangePassRequestDateChanged();
    partial void OnParentIDChanging(System.Nullable<long> value);
    partial void OnParentIDChanged();
    partial void OnCardNumberChanging(string value);
    partial void OnCardNumberChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnEmployeeIDChanging(System.Nullable<long> value);
    partial void OnEmployeeIDChanged();
    partial void OnRegUserIDChanging(System.Nullable<long> value);
    partial void OnRegUserIDChanged();
    #endregion
	
	public UserTable()
	{
		this._PermissionTables = new EntitySet<PermissionTable>(new Action<PermissionTable>(this.attach_PermissionTables), new Action<PermissionTable>(this.detach_PermissionTables));
		this._UserGroupAccessTables = new EntitySet<UserGroupAccessTable>(new Action<UserGroupAccessTable>(this.attach_UserGroupAccessTables), new Action<UserGroupAccessTable>(this.detach_UserGroupAccessTables));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Family", DbType="NVarChar(MAX)")]
	public string Family
	{
		get
		{
			return this._Family;
		}
		set
		{
			if ((this._Family != value))
			{
				this.OnFamilyChanging(value);
				this.SendPropertyChanging();
				this._Family = value;
				this.SendPropertyChanged("Family");
				this.OnFamilyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(MAX)")]
	public string Tel
	{
		get
		{
			return this._Tel;
		}
		set
		{
			if ((this._Tel != value))
			{
				this.OnTelChanging(value);
				this.SendPropertyChanging();
				this._Tel = value;
				this.SendPropertyChanged("Tel");
				this.OnTelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(MAX)")]
	public string ImageUrl
	{
		get
		{
			return this._ImageUrl;
		}
		set
		{
			if ((this._ImageUrl != value))
			{
				this.OnImageUrlChanging(value);
				this.SendPropertyChanging();
				this._ImageUrl = value;
				this.SendPropertyChanged("ImageUrl");
				this.OnImageUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
	public System.Nullable<System.DateTime> Birthday
	{
		get
		{
			return this._Birthday;
		}
		set
		{
			if ((this._Birthday != value))
			{
				this.OnBirthdayChanging(value);
				this.SendPropertyChanging();
				this._Birthday = value;
				this.SendPropertyChanged("Birthday");
				this.OnBirthdayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
	public System.Nullable<bool> Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(MAX)")]
	public string ZipCode
	{
		get
		{
			return this._ZipCode;
		}
		set
		{
			if ((this._ZipCode != value))
			{
				this.OnZipCodeChanging(value);
				this.SendPropertyChanging();
				this._ZipCode = value;
				this.SendPropertyChanged("ZipCode");
				this.OnZipCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(MAX)")]
	public string Website
	{
		get
		{
			return this._Website;
		}
		set
		{
			if ((this._Website != value))
			{
				this.OnWebsiteChanging(value);
				this.SendPropertyChanging();
				this._Website = value;
				this.SendPropertyChanged("Website");
				this.OnWebsiteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Twitter", DbType="NVarChar(MAX)")]
	public string Twitter
	{
		get
		{
			return this._Twitter;
		}
		set
		{
			if ((this._Twitter != value))
			{
				this.OnTwitterChanging(value);
				this.SendPropertyChanging();
				this._Twitter = value;
				this.SendPropertyChanged("Twitter");
				this.OnTwitterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facebook", DbType="NVarChar(MAX)")]
	public string Facebook
	{
		get
		{
			return this._Facebook;
		}
		set
		{
			if ((this._Facebook != value))
			{
				this.OnFacebookChanging(value);
				this.SendPropertyChanging();
				this._Facebook = value;
				this.SendPropertyChanged("Facebook");
				this.OnFacebookChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GooglePlus", DbType="NVarChar(MAX)")]
	public string GooglePlus
	{
		get
		{
			return this._GooglePlus;
		}
		set
		{
			if ((this._GooglePlus != value))
			{
				this.OnGooglePlusChanging(value);
				this.SendPropertyChanging();
				this._GooglePlus = value;
				this.SendPropertyChanged("GooglePlus");
				this.OnGooglePlusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Github", DbType="NVarChar(MAX)")]
	public string Github
	{
		get
		{
			return this._Github;
		}
		set
		{
			if ((this._Github != value))
			{
				this.OnGithubChanging(value);
				this.SendPropertyChanging();
				this._Github = value;
				this.SendPropertyChanged("Github");
				this.OnGithubChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Linkedin", DbType="NVarChar(MAX)")]
	public string Linkedin
	{
		get
		{
			return this._Linkedin;
		}
		set
		{
			if ((this._Linkedin != value))
			{
				this.OnLinkedinChanging(value);
				this.SendPropertyChanging();
				this._Linkedin = value;
				this.SendPropertyChanged("Linkedin");
				this.OnLinkedinChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skype", DbType="NVarChar(MAX)")]
	public string Skype
	{
		get
		{
			return this._Skype;
		}
		set
		{
			if ((this._Skype != value))
			{
				this.OnSkypeChanging(value);
				this.SendPropertyChanging();
				this._Skype = value;
				this.SendPropertyChanged("Skype");
				this.OnSkypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(MAX)")]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> LoginDate
	{
		get
		{
			return this._LoginDate;
		}
		set
		{
			if ((this._LoginDate != value))
			{
				this.OnLoginDateChanging(value);
				this.SendPropertyChanging();
				this._LoginDate = value;
				this.SendPropertyChanged("LoginDate");
				this.OnLoginDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoutDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> LogoutDate
	{
		get
		{
			return this._LogoutDate;
		}
		set
		{
			if ((this._LogoutDate != value))
			{
				this.OnLogoutDateChanging(value);
				this.SendPropertyChanging();
				this._LogoutDate = value;
				this.SendPropertyChanged("LogoutDate");
				this.OnLogoutDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> RegDate
	{
		get
		{
			return this._RegDate;
		}
		set
		{
			if ((this._RegDate != value))
			{
				this.OnRegDateChanging(value);
				this.SendPropertyChanging();
				this._RegDate = value;
				this.SendPropertyChanged("RegDate");
				this.OnRegDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDelete", DbType="Bit")]
	public System.Nullable<bool> IsDelete
	{
		get
		{
			return this._IsDelete;
		}
		set
		{
			if ((this._IsDelete != value))
			{
				this.OnIsDeleteChanging(value);
				this.SendPropertyChanging();
				this._IsDelete = value;
				this.SendPropertyChanged("IsDelete");
				this.OnIsDeleteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(50)")]
	public string Ip
	{
		get
		{
			return this._Ip;
		}
		set
		{
			if ((this._Ip != value))
			{
				this.OnIpChanging(value);
				this.SendPropertyChanging();
				this._Ip = value;
				this.SendPropertyChanged("Ip");
				this.OnIpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit")]
	public System.Nullable<bool> EmailConfirmed
	{
		get
		{
			return this._EmailConfirmed;
		}
		set
		{
			if ((this._EmailConfirmed != value))
			{
				this.OnEmailConfirmedChanging(value);
				this.SendPropertyChanging();
				this._EmailConfirmed = value;
				this.SendPropertyChanged("EmailConfirmed");
				this.OnEmailConfirmedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int")]
	public System.Nullable<int> AccessFailedCount
	{
		get
		{
			return this._AccessFailedCount;
		}
		set
		{
			if ((this._AccessFailedCount != value))
			{
				this.OnAccessFailedCountChanging(value);
				this.SendPropertyChanging();
				this._AccessFailedCount = value;
				this.SendPropertyChanged("AccessFailedCount");
				this.OnAccessFailedCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileConfirmed", DbType="Bit")]
	public System.Nullable<bool> MobileConfirmed
	{
		get
		{
			return this._MobileConfirmed;
		}
		set
		{
			if ((this._MobileConfirmed != value))
			{
				this.OnMobileConfirmedChanging(value);
				this.SendPropertyChanging();
				this._MobileConfirmed = value;
				this.SendPropertyChanged("MobileConfirmed");
				this.OnMobileConfirmedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePassRequestCode", DbType="NVarChar(MAX)")]
	public string ChangePassRequestCode
	{
		get
		{
			return this._ChangePassRequestCode;
		}
		set
		{
			if ((this._ChangePassRequestCode != value))
			{
				this.OnChangePassRequestCodeChanging(value);
				this.SendPropertyChanging();
				this._ChangePassRequestCode = value;
				this.SendPropertyChanged("ChangePassRequestCode");
				this.OnChangePassRequestCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePassRequestDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> ChangePassRequestDate
	{
		get
		{
			return this._ChangePassRequestDate;
		}
		set
		{
			if ((this._ChangePassRequestDate != value))
			{
				this.OnChangePassRequestDateChanging(value);
				this.SendPropertyChanging();
				this._ChangePassRequestDate = value;
				this.SendPropertyChanged("ChangePassRequestDate");
				this.OnChangePassRequestDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="BigInt")]
	public System.Nullable<long> ParentID
	{
		get
		{
			return this._ParentID;
		}
		set
		{
			if ((this._ParentID != value))
			{
				this.OnParentIDChanging(value);
				this.SendPropertyChanging();
				this._ParentID = value;
				this.SendPropertyChanged("ParentID");
				this.OnParentIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNumber", DbType="NVarChar(MAX)")]
	public string CardNumber
	{
		get
		{
			return this._CardNumber;
		}
		set
		{
			if ((this._CardNumber != value))
			{
				this.OnCardNumberChanging(value);
				this.SendPropertyChanging();
				this._CardNumber = value;
				this.SendPropertyChanged("CardNumber");
				this.OnCardNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(MAX)")]
	public string AccountNumber
	{
		get
		{
			return this._AccountNumber;
		}
		set
		{
			if ((this._AccountNumber != value))
			{
				this.OnAccountNumberChanging(value);
				this.SendPropertyChanging();
				this._AccountNumber = value;
				this.SendPropertyChanged("AccountNumber");
				this.OnAccountNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="BigInt")]
	public System.Nullable<long> EmployeeID
	{
		get
		{
			return this._EmployeeID;
		}
		set
		{
			if ((this._EmployeeID != value))
			{
				this.OnEmployeeIDChanging(value);
				this.SendPropertyChanging();
				this._EmployeeID = value;
				this.SendPropertyChanged("EmployeeID");
				this.OnEmployeeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegUserID", DbType="BigInt")]
	public System.Nullable<long> RegUserID
	{
		get
		{
			return this._RegUserID;
		}
		set
		{
			if ((this._RegUserID != value))
			{
				this.OnRegUserIDChanging(value);
				this.SendPropertyChanging();
				this._RegUserID = value;
				this.SendPropertyChanged("RegUserID");
				this.OnRegUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTable_PermissionTable", Storage="_PermissionTables", ThisKey="Id", OtherKey="UserID")]
	public EntitySet<PermissionTable> PermissionTables
	{
		get
		{
			return this._PermissionTables;
		}
		set
		{
			this._PermissionTables.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserTable_UserGroupAccessTable", Storage="_UserGroupAccessTables", ThisKey="Id", OtherKey="UserID")]
	public EntitySet<UserGroupAccessTable> UserGroupAccessTables
	{
		get
		{
			return this._UserGroupAccessTables;
		}
		set
		{
			this._UserGroupAccessTables.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_PermissionTables(PermissionTable entity)
	{
		this.SendPropertyChanging();
		entity.UserTable = this;
	}
	
	private void detach_PermissionTables(PermissionTable entity)
	{
		this.SendPropertyChanging();
		entity.UserTable = null;
	}
	
	private void attach_UserGroupAccessTables(UserGroupAccessTable entity)
	{
		this.SendPropertyChanging();
		entity.UserTable = this;
	}
	
	private void detach_UserGroupAccessTables(UserGroupAccessTable entity)
	{
		this.SendPropertyChanging();
		entity.UserTable = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TelegramLottery")]
public partial class TelegramLottery : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _Id;
	
	private string _Title;
	
	private System.Nullable<int> _Year;
	
	private System.Nullable<int> _MonthNumber;
	
	private string _Code;
	
	private string _StartDate;
	
	private string _StartTime;
	
	private string _EndDate;
	
	private string _EndTime;
	
	private string _Link;
	
	private System.Nullable<bool> _IsActive;
	
	private EntitySet<TelegramLotteryUser> _TelegramLotteryUsers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnMonthNumberChanging(System.Nullable<int> value);
    partial void OnMonthNumberChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnStartDateChanging(string value);
    partial void OnStartDateChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnEndDateChanging(string value);
    partial void OnEndDateChanged();
    partial void OnEndTimeChanging(string value);
    partial void OnEndTimeChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
	
	public TelegramLottery()
	{
		this._TelegramLotteryUsers = new EntitySet<TelegramLotteryUser>(new Action<TelegramLotteryUser>(this.attach_TelegramLotteryUsers), new Action<TelegramLotteryUser>(this.detach_TelegramLotteryUsers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
	public System.Nullable<int> Year
	{
		get
		{
			return this._Year;
		}
		set
		{
			if ((this._Year != value))
			{
				this.OnYearChanging(value);
				this.SendPropertyChanging();
				this._Year = value;
				this.SendPropertyChanged("Year");
				this.OnYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthNumber", DbType="Int")]
	public System.Nullable<int> MonthNumber
	{
		get
		{
			return this._MonthNumber;
		}
		set
		{
			if ((this._MonthNumber != value))
			{
				this.OnMonthNumberChanging(value);
				this.SendPropertyChanging();
				this._MonthNumber = value;
				this.SendPropertyChanged("MonthNumber");
				this.OnMonthNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
	public string Code
	{
		get
		{
			return this._Code;
		}
		set
		{
			if ((this._Code != value))
			{
				this.OnCodeChanging(value);
				this.SendPropertyChanging();
				this._Code = value;
				this.SendPropertyChanged("Code");
				this.OnCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="NVarChar(10)")]
	public string StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="NVarChar(10)")]
	public string StartTime
	{
		get
		{
			return this._StartTime;
		}
		set
		{
			if ((this._StartTime != value))
			{
				this.OnStartTimeChanging(value);
				this.SendPropertyChanging();
				this._StartTime = value;
				this.SendPropertyChanged("StartTime");
				this.OnStartTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="NVarChar(10)")]
	public string EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="NVarChar(10)")]
	public string EndTime
	{
		get
		{
			return this._EndTime;
		}
		set
		{
			if ((this._EndTime != value))
			{
				this.OnEndTimeChanging(value);
				this.SendPropertyChanging();
				this._EndTime = value;
				this.SendPropertyChanged("EndTime");
				this.OnEndTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX)")]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TelegramLottery_TelegramLotteryUser", Storage="_TelegramLotteryUsers", ThisKey="Id", OtherKey="LotteryId")]
	public EntitySet<TelegramLotteryUser> TelegramLotteryUsers
	{
		get
		{
			return this._TelegramLotteryUsers;
		}
		set
		{
			this._TelegramLotteryUsers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TelegramLotteryUsers(TelegramLotteryUser entity)
	{
		this.SendPropertyChanging();
		entity.TelegramLottery = this;
	}
	
	private void detach_TelegramLotteryUsers(TelegramLotteryUser entity)
	{
		this.SendPropertyChanging();
		entity.TelegramLottery = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IdeaTable")]
public partial class IdeaTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Title;
	
	private string _Name;
	
	private string _Mobile;
	
	private string _Tel;
	
	private string _Email;
	
	private string _Idea;
	
	private string _Kind;
	
	private string _Description;
	
	private string _Advantage;
	
	private string _RefCode;
	
	private System.Nullable<System.DateTime> _RegDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIdeaChanging(string value);
    partial void OnIdeaChanged();
    partial void OnKindChanging(string value);
    partial void OnKindChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAdvantageChanging(string value);
    partial void OnAdvantageChanged();
    partial void OnRefCodeChanging(string value);
    partial void OnRefCodeChanged();
    partial void OnRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegDateChanged();
    #endregion
	
	public IdeaTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NChar(100)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(11)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(50)")]
	public string Tel
	{
		get
		{
			return this._Tel;
		}
		set
		{
			if ((this._Tel != value))
			{
				this.OnTelChanging(value);
				this.SendPropertyChanging();
				this._Tel = value;
				this.SendPropertyChanged("Tel");
				this.OnTelChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idea", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Idea
	{
		get
		{
			return this._Idea;
		}
		set
		{
			if ((this._Idea != value))
			{
				this.OnIdeaChanging(value);
				this.SendPropertyChanging();
				this._Idea = value;
				this.SendPropertyChanged("Idea");
				this.OnIdeaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="NVarChar(500)")]
	public string Kind
	{
		get
		{
			return this._Kind;
		}
		set
		{
			if ((this._Kind != value))
			{
				this.OnKindChanging(value);
				this.SendPropertyChanging();
				this._Kind = value;
				this.SendPropertyChanged("Kind");
				this.OnKindChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advantage", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Advantage
	{
		get
		{
			return this._Advantage;
		}
		set
		{
			if ((this._Advantage != value))
			{
				this.OnAdvantageChanging(value);
				this.SendPropertyChanging();
				this._Advantage = value;
				this.SendPropertyChanged("Advantage");
				this.OnAdvantageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefCode", DbType="NVarChar(50)")]
	public string RefCode
	{
		get
		{
			return this._RefCode;
		}
		set
		{
			if ((this._RefCode != value))
			{
				this.OnRefCodeChanging(value);
				this.SendPropertyChanging();
				this._RefCode = value;
				this.SendPropertyChanged("RefCode");
				this.OnRefCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegDate", DbType="Date")]
	public System.Nullable<System.DateTime> RegDate
	{
		get
		{
			return this._RegDate;
		}
		set
		{
			if ((this._RegDate != value))
			{
				this.OnRegDateChanging(value);
				this.SendPropertyChanging();
				this._RegDate = value;
				this.SendPropertyChanged("RegDate");
				this.OnRegDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModalTable")]
public partial class ModalTable : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _Title;
	
	private string _Image;
	
	private string _Description;
	
	private System.Nullable<bool> _IsActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
	
	public ModalTable()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(MAX)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
	public System.Nullable<bool> IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
